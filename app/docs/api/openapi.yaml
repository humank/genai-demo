openapi: 3.0.1
info:
  title: GenAI Demo - DDD 電商平台 API
  description: |
    基於領域驅動設計（DDD）的電商平台 API

    ## 架構特色
    - 遵循 DDD 分層架構
    - 六邊形架構（Hexagonal Architecture）
    - CQRS 和事件驅動設計
    - 豐富的領域模型

    ## 主要功能模組
    - 訂單管理：完整的訂單生命週期
    - 支付處理：多種支付方式和狀態管理
    - 庫存管理：即時庫存追蹤和預留
    - 產品管理：產品資訊和分類
    - 促銷活動：多樣化的促銷規則
    - 定價策略：動態定價和佣金計算
    - 客戶管理：會員等級和偏好設定

    ## 錯誤處理
    所有 API 都遵循統一的錯誤回應格式，包含錯誤代碼、訊息、時間戳記和詳細資訊。
  contact:
    name: GenAI Demo Team
    url: https://github.com/humank/genai-demo
    email: contact@genai-demo.com
  license:
    name: MIT License
    url: https://opensource.org/licenses/MIT
  version: 1.0.0
servers:
  - url: http://test-api.genai-demo.com
    description: 測試環境
security:
  - bearerAuth: []
tags:
  - name: 事件監控
    description: 事件處理系統監控和管理
  - name: 統計報表
    description: 提供系統各項統計數據和報表功能，包括數據庫統計、訂單狀態分布、支付方式分析等
  - name: 訂單管理
    description: 訂單相關的 API 操作，包含訂單創建、查詢、更新和狀態管理
  - name: 支付管理
    description: 處理支付相關操作，包括支付處理、查詢、退款和取消等功能
  - name: Profile
    description: Profile information and configuration
  - name: 庫存管理
    description: 庫存相關的 API 操作，包含庫存查詢、預留和釋放
  - name: 活動記錄
    description: 系統活動記錄管理 API，提供查詢和篩選系統中各種業務活動的功能
  - name: 庫存管理
    description: 提供庫存查詢、調整等庫存管理相關功能。包含庫存數量查詢、庫存調整操作，支援增加、減少和設定庫存數量。
  - name: 客戶管理
    description: 客戶相關的 API 操作，包括查詢客戶資訊和客戶列表。注意：客戶敏感資訊已進行適當的隱私保護處理
  - name: 支付處理
    description: 支付相關的 API 操作，包含支付創建、查詢和狀態更新
  - name: 活動記錄
    description: 活動記錄相關的 API 操作，包含系統活動追蹤
  - name: 客戶管理
    description: 客戶相關的 API 操作，包含客戶資訊和會員管理
  - name: 統計報表
    description: 統計數據相關的 API 操作，包含各種業務指標查詢
  - name: 產品管理
    description: 提供產品的查詢、更新和刪除功能，包括產品資訊管理、庫存狀態查詢等操作
  - name: 系統監控
    description: 系統健康檢查和配置資訊相關的 API 操作
  - name: 消費者商品
    description: 消費者商品瀏覽和搜索功能
  - name: 定價管理
    description: 提供定價策略、佣金費率管理和產品定價規則的相關功能，支援複雜的定價邏輯和促銷規則配置
  - name: 產品管理
    description: 產品相關的 API 操作，包含產品資訊管理和分類
  - name: 購物車管理
    description: 購物車相關操作
  - name: Actuator
    description: Monitor and interact
    externalDocs:
      description: Spring Boot Actuator Web API Documentation
      url: https://docs.spring.io/spring-boot/docs/current/actuator-api/html/
  - name: 訂單管理
    description: 訂單相關的 API 操作，包括創建、查詢、修改和取消訂單
  - name: 定價策略
    description: 定價相關的 API 操作，包含定價規則和佣金計算
paths:
  /api/products/{productId}:
    get:
      tags:
        - 產品管理
      summary: 獲取單個產品
      description: 根據產品ID獲取產品詳細資訊，包括產品名稱、描述、價格、分類、庫存狀態等完整資料。
      operationId: getProduct
      parameters:
        - name: productId
          in: path
          description: 產品唯一識別碼
          required: true
          schema:
            type: string
          example: PROD-001
      responses:
        "404":
          description: 產品不存在
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/StandardErrorResponse"
        "200":
          description: 成功獲取產品資訊
          content:
            application/json:
              schema:
                type: string
                example:
                  success: true
                  data:
                    id: PROD-001
                    name: 產品名稱
                    description: 產品描述
                    price:
                      amount: 100.0
                      currency: TWD
                    category: 電子產品
                    inStock: true
                    stockQuantity: 50
        "500":
          description: 系統內部錯誤
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/StandardErrorResponse"
    put:
      tags:
        - 產品管理
      summary: 更新產品資訊
      description: 更新指定產品的基本資訊，包括產品名稱、描述、價格、貨幣和分類。所有欄位都是可選的，只更新提供的欄位。
      operationId: updateProduct
      parameters:
        - name: productId
          in: path
          description: 產品唯一識別碼
          required: true
          schema:
            type: string
          example: PROD-001
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UpdateProductRequest"
        required: true
      responses:
        "404":
          description: 產品不存在
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/StandardErrorResponse"
        "200":
          description: 產品更新成功
          content:
            application/json:
              schema:
                type: string
                example:
                  success: true
                  data:
                    id: PROD-001
                    name: 產品名稱
                    description: 產品描述
                    price:
                      amount: 100.0
                      currency: TWD
                    category: 電子產品
                    inStock: true
                    stockQuantity: 50
        "500":
          description: 系統內部錯誤
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/StandardErrorResponse"
        "422":
          description: 業務規則驗證失敗
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/StandardErrorResponse"
        "400":
          description: 請求參數無效
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/StandardErrorResponse"
    delete:
      tags:
        - 產品管理
      summary: 刪除產品
      description: 根據產品ID刪除指定產品。此操作不可逆，請謹慎使用。刪除前會檢查產品是否存在相關訂單。
      operationId: deleteProduct
      parameters:
        - name: productId
          in: path
          description: 產品唯一識別碼
          required: true
          schema:
            type: string
          example: PROD-001
      responses:
        "404":
          description: 產品不存在
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/StandardErrorResponse"
        "422":
          description: 產品無法刪除（存在相關訂單）
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/StandardErrorResponse"
        "200":
          description: 產品刪除成功
          content:
            application/json:
              schema:
                type: string
                example:
                  success: true
                  message: 產品已成功刪除
        "500":
          description: 系統內部錯誤
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/StandardErrorResponse"
  /api/pricing/rules/{priceId}/commission:
    put:
      tags:
        - 定價管理
      summary: 更新佣金費率
      description: 更新指定定價規則的佣金費率設定，包含一般費率和活動期間特殊費率。支援差異化佣金策略配置。
      operationId: updateCommissionRate
      parameters:
        - name: priceId
          in: path
          description: 定價規則的唯一識別碼
          required: true
          schema:
            type: string
          example: price-123e4567-e89b-12d3-a456-426614174000
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UpdateCommissionRateRequest"
        required: true
      responses:
        "404":
          description: 指定的定價規則不存在
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/StandardErrorResponse"
        "200":
          description: 佣金費率更新成功
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PricingRuleDto"
        "422":
          description: 業務規則違反，如佣金費率設定不符合商業邏輯或超出允許範圍
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/StandardErrorResponse"
        "500":
          description: 系統內部錯誤
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/StandardErrorResponse"
        "400":
          description: 請求參數無效，如費率值超出合理範圍或格式錯誤
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/StandardErrorResponse"
  /api/consumer/cart/{customerId}/items/{productId}:
    put:
      tags:
        - 購物車管理
      summary: 更新購物車商品數量
      description: 更新購物車中指定商品的數量
      operationId: updateItemQuantity
      parameters:
        - name: customerId
          in: path
          description: 客戶ID
          required: true
          schema:
            type: string
        - name: productId
          in: path
          description: 商品ID
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UpdateQuantityRequest"
        required: true
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: object
                additionalProperties:
                  type: string
    delete:
      tags:
        - 購物車管理
      summary: 從購物車移除商品
      description: 從購物車中移除指定商品
      operationId: removeItemFromCart
      parameters:
        - name: customerId
          in: path
          description: 客戶ID
          required: true
          schema:
            type: string
        - name: productId
          in: path
          description: 商品ID
          required: true
          schema:
            type: string
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: object
                additionalProperties:
                  type: string
  /api/pricing/rules:
    post:
      tags:
        - 定價管理
      summary: 創建定價規則
      description: 為特定產品或產品類別創建新的定價規則，包含折扣策略、有效期間和佣金設定。支援複雜的定價邏輯配置。
      operationId: createPricingRule
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreatePricingRuleRequest"
        required: true
      responses:
        "200":
          description: 定價規則創建成功
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PricingRuleDto"
        "500":
          description: 系統內部錯誤
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/StandardErrorResponse"
        "400":
          description: 請求參數無效，如必填欄位缺失、日期格式錯誤或定價邏輯衝突
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/StandardErrorResponse"
        "422":
          description: 業務規則違反，如定價規則衝突、有效期間重疊或折扣設定不合理
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/StandardErrorResponse"
  /api/payments:
    get:
      tags:
        - 支付管理
      summary: 獲取所有支付記錄
      description: 獲取系統中所有支付記錄的列表，通常用於管理後台查詢
      operationId: getAllPayments
      responses:
        "200":
          description: 成功獲取支付列表
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PaymentResponse"
        "500":
          description: 系統內部錯誤
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/StandardErrorResponse"
    post:
      tags:
        - 支付管理
      summary: 處理支付
      description: 處理新的支付請求，支援多種支付方式包括信用卡、轉帳等
      operationId: processPayment
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/PaymentRequest"
        required: true
      responses:
        "201":
          description: 支付處理成功
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PaymentResponse"
        "422":
          description: 支付處理失敗（業務邏輯錯誤）
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/StandardErrorResponse"
        "500":
          description: 系統內部錯誤
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/StandardErrorResponse"
        "400":
          description: 請求參數無效
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/StandardErrorResponse"
  /api/payments/{paymentId}/refund:
    post:
      tags:
        - 支付管理
      summary: 處理退款
      description: 對指定的支付進行退款處理，將款項退回給客戶
      operationId: refundPayment
      parameters:
        - name: paymentId
          in: path
          description: 支付ID（UUID格式）
          required: true
          schema:
            pattern: "^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$"
            type: string
          example: 123e4567-e89b-12d3-a456-426614174000
      responses:
        "404":
          description: 支付不存在
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/StandardErrorResponse"
        "422":
          description: 支付狀態不允許退款
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/StandardErrorResponse"
        "500":
          description: 系統內部錯誤
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/StandardErrorResponse"
        "400":
          description: 支付ID格式無效
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/StandardErrorResponse"
        "200":
          description: 退款處理成功
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PaymentResponse"
  /api/payments/{paymentId}/cancel:
    post:
      tags:
        - 支付管理
      summary: 取消支付
      description: 取消指定的支付，通常用於處理中的支付或預授權支付
      operationId: cancelPayment
      parameters:
        - name: paymentId
          in: path
          description: 支付ID（UUID格式）
          required: true
          schema:
            pattern: "^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$"
            type: string
          example: 123e4567-e89b-12d3-a456-426614174000
      responses:
        "404":
          description: 支付不存在
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/StandardErrorResponse"
        "422":
          description: 支付狀態不允許取消
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/StandardErrorResponse"
        "500":
          description: 系統內部錯誤
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/StandardErrorResponse"
        "200":
          description: 支付取消成功
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PaymentResponse"
        "400":
          description: 支付ID格式無效
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/StandardErrorResponse"
  /api/orders:
    get:
      tags:
        - 訂單管理
      summary: 獲取訂單列表
      description: 分頁獲取訂單列表，支援分頁參數設定
      operationId: getOrders
      parameters:
        - name: page
          in: query
          description: 頁碼，從0開始
          required: false
          schema:
            type: integer
            format: int32
            default: 0
          example: 0
        - name: size
          in: query
          description: 每頁大小
          required: false
          schema:
            type: integer
            format: int32
            default: 20
          example: 20
      responses:
        "500":
          description: 內部伺服器錯誤
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/StandardErrorResponse"
        "200":
          description: 成功獲取訂單列表
          content:
            application/json:
              schema:
                type: string
    post:
      tags:
        - 訂單管理
      summary: 創建新訂單
      description: 根據客戶ID和配送地址創建新的訂單
      operationId: createOrder
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreateOrderRequest"
        required: true
      responses:
        "201":
          description: 訂單創建成功
          content:
            application/json:
              schema:
                type: string
        "500":
          description: 內部伺服器錯誤
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/StandardErrorResponse"
        "400":
          description: 請求參數無效
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/StandardErrorResponse"
  /api/orders/{orderId}/submit:
    post:
      tags:
        - 訂單管理
      summary: 提交訂單
      description: 將訂單狀態變更為已提交，準備進行後續處理
      operationId: submitOrder
      parameters:
        - name: orderId
          in: path
          description: 訂單ID
          required: true
          schema:
            type: string
          example: order-123
      responses:
        "200":
          description: 訂單提交成功
          content:
            application/json:
              schema:
                type: string
        "400":
          description: 訂單狀態不允許提交
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/StandardErrorResponse"
        "404":
          description: 訂單不存在
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/StandardErrorResponse"
        "500":
          description: 內部伺服器錯誤
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/StandardErrorResponse"
  /api/orders/{orderId}/items:
    post:
      tags:
        - 訂單管理
      summary: 添加訂單項目
      description: 向指定訂單添加商品項目
      operationId: addOrderItem
      parameters:
        - name: orderId
          in: path
          description: 訂單ID
          required: true
          schema:
            type: string
          example: order-123
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/AddOrderItemRequest"
        required: true
      responses:
        "200":
          description: 成功添加訂單項目
          content:
            application/json:
              schema:
                type: string
        "404":
          description: 訂單不存在
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/StandardErrorResponse"
        "500":
          description: 內部伺服器錯誤
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/StandardErrorResponse"
        "400":
          description: 請求參數無效
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/StandardErrorResponse"
  /api/orders/{orderId}/cancel:
    post:
      tags:
        - 訂單管理
      summary: 取消訂單
      description: 取消指定的訂單，將訂單狀態變更為已取消
      operationId: cancelOrder
      parameters:
        - name: orderId
          in: path
          description: 訂單ID
          required: true
          schema:
            type: string
          example: order-123
      responses:
        "404":
          description: 訂單不存在
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/StandardErrorResponse"
        "400":
          description: 訂單狀態不允許取消
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/StandardErrorResponse"
        "200":
          description: 訂單取消成功
          content:
            application/json:
              schema:
                type: string
        "500":
          description: 內部伺服器錯誤
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/StandardErrorResponse"
  /api/monitoring/events/statistics/processing/reset:
    post:
      tags:
        - 事件監控
      summary: 重置處理統計
      description: 重置事件處理的統計信息
      operationId: resetProcessingStatistics
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: string
  /api/monitoring/events/sequence/{aggregateId}/update:
    post:
      tags:
        - 事件監控
      summary: 強制更新聚合根序列
      description: 強制更新指定聚合根的事件序列號
      operationId: forceUpdateSequence
      parameters:
        - name: aggregateId
          in: path
          required: true
          schema:
            type: string
        - name: sequence
          in: query
          required: true
          schema:
            type: integer
            format: int64
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: string
  /api/monitoring/events/sequence/{aggregateId}/reset:
    post:
      tags:
        - 事件監控
      summary: 重置聚合根序列
      description: 重置指定聚合根的事件序列追蹤
      operationId: resetAggregateSequence
      parameters:
        - name: aggregateId
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: string
  /api/inventory/{productId}/adjust:
    post:
      tags:
        - 庫存管理
      summary: 調整產品庫存
      description: 對指定產品進行庫存調整操作，支援增加庫存(INCREASE)、減少庫存(DECREASE)或設定庫存(SET)三種調整類型。調整時需要提供調整數量和調整原因。
      operationId: adjustInventory
      parameters:
        - name: productId
          in: path
          description: 產品唯一識別碼，指定要調整庫存的產品
          required: true
          schema:
            type: string
          example: PROD-001
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/AdjustInventoryRequest"
        required: true
      responses:
        "404":
          description: 產品不存在
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/StandardErrorResponse"
        "422":
          description: 業務規則違反，如庫存不足無法減少、調整後庫存為負數等
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/StandardErrorResponse"
        "500":
          description: 系統內部錯誤
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/StandardErrorResponse"
        "200":
          description: 庫存調整成功
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InventoryResponse"
        "400":
          description: 請求參數無效，如調整數量為負數、調整類型不正確等
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/StandardErrorResponse"
  /api/consumer/cart/{customerId}/promotions:
    get:
      tags:
        - 購物車管理
      summary: 獲取可用促銷活動
      description: 獲取購物車可用的促銷活動
      operationId: getAvailablePromotions
      parameters:
        - name: customerId
          in: path
          description: 客戶ID
          required: true
          schema:
            type: string
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: object
                additionalProperties:
                  type: object
    post:
      tags:
        - 購物車管理
      summary: 應用促銷活動
      description: 向購物車應用促銷活動
      operationId: applyPromotion
      parameters:
        - name: customerId
          in: path
          description: 客戶ID
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ApplyPromotionRequest"
        required: true
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: object
                additionalProperties:
                  type: string
  /api/consumer/cart/{customerId}/items:
    post:
      tags:
        - 購物車管理
      summary: 添加商品到購物車
      description: 向購物車添加商品
      operationId: addItemToCart
      parameters:
        - name: customerId
          in: path
          description: 客戶ID
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/AddItemRequest"
        required: true
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: object
                additionalProperties:
                  type: string
  /api/consumer/cart/{customerId}/coupons:
    post:
      tags:
        - 購物車管理
      summary: 應用優惠券
      description: 向購物車應用優惠券
      operationId: applyCoupon
      parameters:
        - name: customerId
          in: path
          description: 客戶ID
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ApplyCouponRequest"
        required: true
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: object
                additionalProperties:
                  type: string
  /api/stats:
    get:
      tags:
        - 統計報表
      summary: 獲取系統統計數據
      description: 獲取系統整體統計數據，包括各個數據表的記錄數量、系統狀態等基礎統計信息
      operationId: getStats
      responses:
        "500":
          description: 系統內部錯誤
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/StandardErrorResponse"
        "200":
          description: 成功獲取統計數據
          content:
            application/json:
              schema:
                type: string
              examples:
                統計數據範例:
                  description: 統計數據範例
                  value:
                    customers: 150
                    orders: 1250
                    products: 85
                    payments: 1180
                    inventory_items: 320
                    status: success
                    message: 統計數據獲取成功
  /api/stats/payment-methods:
    get:
      tags:
        - 統計報表
      summary: 獲取支付方式分布統計
      description: 獲取系統中所有支付交易按支付方式分布的統計數據，用於分析客戶支付偏好和支付渠道效果
      operationId: getPaymentMethodStats
      responses:
        "200":
          description: 成功獲取支付方式統計
          content:
            application/json:
              schema:
                type: string
              examples:
                支付方式統計範例:
                  description: 支付方式統計範例
                  value:
                    paymentMethodDistribution:
                      CREDIT_CARD: 450
                      DEBIT_CARD: 280
                      BANK_TRANSFER: 150
                      DIGITAL_WALLET: 320
                      CASH_ON_DELIVERY: 95
                    status: success
                    message: 支付方式統計獲取成功
        "500":
          description: 系統內部錯誤
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/StandardErrorResponse"
  /api/stats/order-status:
    get:
      tags:
        - 統計報表
      summary: 獲取訂單狀態分布統計
      description: 獲取系統中所有訂單按狀態分布的統計數據，用於分析訂單處理情況和業務狀態
      operationId: getOrderStatusStats
      responses:
        "200":
          description: 成功獲取訂單狀態統計
          content:
            application/json:
              schema:
                type: string
              examples:
                訂單狀態統計範例:
                  description: 訂單狀態統計範例
                  value:
                    statusDistribution:
                      PENDING: 45
                      CONFIRMED: 120
                      PROCESSING: 85
                      SHIPPED: 200
                      DELIVERED: 350
                      CANCELLED: 25
                    status: success
                    message: 訂單狀態統計獲取成功
        "500":
          description: 系統內部錯誤
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/StandardErrorResponse"
  /api/profile/info:
    get:
      tags:
        - Profile
      summary: Get profile information
      description: Retrieve current active profiles and configuration details
      operationId: getProfileInfo
      responses:
        "200":
          description: Profile information retrieved successfully
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/ProfileInfoResponse"
        "500":
          description: Internal server error
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/ProfileInfoResponse"
  /api/products:
    get:
      tags:
        - 產品管理
      summary: 獲取產品列表
      description: 分頁查詢產品列表，支援自訂頁碼和每頁數量。回傳產品基本資訊、價格、庫存狀態等資料。
      operationId: getProducts
      parameters:
        - name: page
          in: query
          description: 頁碼，從0開始
          required: false
          schema:
            type: integer
            format: int32
            default: 0
          example: 0
        - name: size
          in: query
          description: 每頁數量，最大100
          required: false
          schema:
            type: integer
            format: int32
            default: 20
          example: 20
      responses:
        "500":
          description: 系統內部錯誤
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/StandardErrorResponse"
        "200":
          description: 成功獲取產品列表
          content:
            application/json:
              schema:
                type: string
                example:
                  success: true
                  data:
                    content:
                      - id: PROD-001
                        name: 產品名稱
                        description: 產品描述
                        price:
                          amount: 100.0
                          currency: TWD
                        category: 電子產品
                        inStock: true
                        stockQuantity: 50
                    totalElements: 100
                    totalPages: 5
                    size: 20
                    number: 0
                    first: true
                    last: false
        "400":
          description: 請求參數無效
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/StandardErrorResponse"
  /api/pricing/rules/product/{productId}:
    get:
      tags:
        - 定價管理
      summary: 獲取產品的定價規則
      description: 查詢指定產品的所有有效定價規則，包含基礎價格、折扣策略、佣金設定和有效期間。結果按優先級和有效期間排序。
      operationId: getPricingRulesForProduct
      parameters:
        - name: productId
          in: path
          description: 產品的唯一識別碼
          required: true
          schema:
            type: string
          example: prod-123e4567-e89b-12d3-a456-426614174000
      responses:
        "404":
          description: 指定的產品不存在
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/StandardErrorResponse"
        "500":
          description: 系統內部錯誤
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/StandardErrorResponse"
        "200":
          description: 成功獲取產品定價規則列表
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PricingRuleDto"
        "400":
          description: 請求參數無效，如產品ID格式錯誤
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/StandardErrorResponse"
  /api/pricing/rules/category/{category}:
    get:
      tags:
        - 定價管理
      summary: 獲取產品類別的定價規則
      description: 查詢指定產品類別的所有定價規則，用於類別級別的定價策略管理。支援批量定價規則查詢和類別定價分析。
      operationId: getPricingRulesByCategory
      parameters:
        - name: category
          in: path
          description: 產品類別，用於篩選特定類別的定價規則
          required: true
          schema:
            type: string
            description: 產品類別枚舉，用於商品分類管理
            example: ELECTRONICS
            enum:
              - ELECTRONICS
              - FASHION
              - GROCERIES
              - HOME_APPLIANCES
              - BEAUTY
              - SPORTS
              - BOOKS
              - TOYS
              - AUTOMOTIVE
              - HEALTH
              - GENERAL
          example: ELECTRONICS
      responses:
        "200":
          description: 成功獲取產品類別定價規則列表
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PricingRuleDto"
        "422":
          description: 業務規則違反，如查詢的產品類別不支援定價規則
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/StandardErrorResponse"
        "400":
          description: 請求參數無效，如產品類別值不在允許範圍內
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/StandardErrorResponse"
        "500":
          description: 系統內部錯誤
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/StandardErrorResponse"
  /api/payments/{paymentId}:
    get:
      tags:
        - 支付管理
      summary: 獲取支付詳情
      description: 根據支付ID獲取特定支付的詳細資訊
      operationId: getPayment
      parameters:
        - name: paymentId
          in: path
          description: 支付ID（UUID格式）
          required: true
          schema:
            pattern: "^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$"
            type: string
          example: 123e4567-e89b-12d3-a456-426614174000
      responses:
        "404":
          description: 支付不存在
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/StandardErrorResponse"
        "500":
          description: 系統內部錯誤
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/StandardErrorResponse"
        "200":
          description: 成功獲取支付詳情
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PaymentResponse"
        "400":
          description: 支付ID格式無效
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/StandardErrorResponse"
  /api/payments/order/{orderId}:
    get:
      tags:
        - 支付管理
      summary: 根據訂單ID獲取支付
      description: 根據訂單ID獲取該訂單相關的支付資訊
      operationId: getPaymentByOrderId
      parameters:
        - name: orderId
          in: path
          description: 訂單ID（UUID格式）
          required: true
          schema:
            pattern: "^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$"
            type: string
          example: 123e4567-e89b-12d3-a456-426614174000
      responses:
        "400":
          description: 訂單ID格式無效
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/StandardErrorResponse"
        "404":
          description: 訂單支付不存在
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/StandardErrorResponse"
        "200":
          description: 成功獲取訂單支付詳情
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PaymentResponse"
        "500":
          description: 系統內部錯誤
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/StandardErrorResponse"
  /api/orders/{orderId}:
    get:
      tags:
        - 訂單管理
      summary: 獲取單一訂單
      description: 根據訂單ID獲取訂單詳細資訊
      operationId: getOrder
      parameters:
        - name: orderId
          in: path
          description: 訂單ID
          required: true
          schema:
            type: string
          example: order-123
      responses:
        "404":
          description: 訂單不存在
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/StandardErrorResponse"
        "500":
          description: 內部伺服器錯誤
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/StandardErrorResponse"
        "200":
          description: 成功獲取訂單資訊
          content:
            application/json:
              schema:
                type: string
  /api/monitoring/events/statistics/sequence:
    get:
      tags:
        - 事件監控
      summary: 獲取序列追蹤統計
      description: 返回事件序列追蹤的統計信息
      operationId: getSequenceStatistics
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/SequenceTrackingStatisticsDto"
  /api/monitoring/events/statistics/retry:
    get:
      tags:
        - 事件監控
      summary: 獲取重試統計
      description: 返回事件重試的統計信息
      operationId: getRetryStatistics
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/RetryStatisticsDto"
  /api/monitoring/events/statistics/processing:
    get:
      tags:
        - 事件監控
      summary: 獲取事件處理統計
      description: 返回事件處理的詳細統計信息
      operationId: getProcessingStatistics
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/ProcessingStatisticsDto"
  /api/monitoring/events/sequence/{aggregateId}:
    get:
      tags:
        - 事件監控
      summary: 獲取聚合根當前序列
      description: 返回指定聚合根的當前事件序列號
      operationId: getCurrentSequence
      parameters:
        - name: aggregateId
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: integer
                format: int64
  /api/monitoring/events/health:
    get:
      tags:
        - 事件監控
      summary: 獲取系統健康狀態
      description: 返回事件處理系統的整體健康狀態
      operationId: getSystemHealth
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/SystemHealthStatusDto"
  /api/monitoring/events/backpressure/status:
    get:
      tags:
        - 事件監控
      summary: 獲取背壓狀態
      description: 返回當前的背壓狀態和負載信息
      operationId: getBackpressureStatus
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/BackpressureStatusDto"
  /api/inventory/{productId}:
    get:
      tags:
        - 庫存管理
      summary: 查詢產品庫存資訊
      description: 根據產品ID查詢該產品的詳細庫存資訊，包含總庫存、可用庫存、預留庫存、庫存閾值和庫存狀態等資訊。
      operationId: getInventory
      parameters:
        - name: productId
          in: path
          description: 產品唯一識別碼，用於查詢該產品的庫存資訊
          required: true
          schema:
            type: string
          example: PROD-001
      responses:
        "404":
          description: 產品不存在或庫存資訊不存在
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/StandardErrorResponse"
        "500":
          description: 系統內部錯誤
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/StandardErrorResponse"
        "200":
          description: 成功獲取庫存資訊
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InventoryResponse"
  /api/database/validation:
    get:
      tags:
        - 系統監控
      summary: 獲取資料庫驗證報告
      description: 獲取資料庫結構和配置的完整驗證報告
      operationId: getValidationReport
      responses:
        "200":
          description: 成功獲取資料庫驗證報告
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DatabaseValidationReport"
        "500":
          description: 內部伺服器錯誤
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/StandardErrorResponse"
  /api/database/health:
    get:
      tags:
        - 系統監控
      summary: 獲取資料庫健康狀態
      description: 檢查資料庫連線狀態和基本健康資訊
      operationId: getHealth
      responses:
        "200":
          description: 資料庫狀態正常
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DatabaseHealthStatus"
        "503":
          description: 資料庫服務不可用
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DatabaseHealthStatus"
        "500":
          description: 內部伺服器錯誤
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/StandardErrorResponse"
  /api/database/config:
    get:
      tags:
        - 系統監控
      summary: 獲取資料庫配置資訊
      description: 獲取當前資料庫配置和連線參數資訊
      operationId: getConfiguration
      responses:
        "200":
          description: 成功獲取資料庫配置資訊
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DatabaseHealthInfo"
        "500":
          description: 內部伺服器錯誤
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/StandardErrorResponse"
  /api/customers:
    get:
      tags:
        - 客戶管理
      summary: 獲取客戶列表
      description: 分頁獲取客戶列表，支援分頁參數設定。返回的客戶資訊已進行隱私保護處理，敏感資訊會被適當遮罩
      operationId: getCustomers
      parameters:
        - name: page
          in: query
          description: 頁碼，從 0 開始
          required: false
          schema:
            type: integer
            format: int32
            default: 0
          example: 0
        - name: size
          in: query
          description: 每頁大小，最大 100
          required: false
          schema:
            type: integer
            format: int32
            default: 20
          example: 20
      responses:
        "200":
          description: 成功獲取客戶列表
          content:
            application/json:
              schema:
                type: string
        "500":
          description: 系統內部錯誤
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/StandardErrorResponse"
        "400":
          description: 請求參數無效
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/StandardErrorResponse"
  /api/customers/{customerId}:
    get:
      tags:
        - 客戶管理
      summary: 獲取單個客戶資訊
      description: 根據客戶ID獲取特定客戶的詳細資訊。返回的客戶資訊已進行隱私保護處理，敏感資訊會被適當遮罩
      operationId: getCustomer
      parameters:
        - name: customerId
          in: path
          description: 客戶唯一識別碼
          required: true
          schema:
            type: string
          example: cust-12345-abcde
      responses:
        "400":
          description: 客戶ID格式無效
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/StandardErrorResponse"
        "200":
          description: 成功獲取客戶資訊
          content:
            application/json:
              schema:
                type: string
        "500":
          description: 系統內部錯誤
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/StandardErrorResponse"
        "404":
          description: 客戶不存在
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/StandardErrorResponse"
  /api/consumer/products:
    get:
      tags:
        - 消費者商品
      summary: 瀏覽商品列表
      description: 分頁瀏覽商品，支援分類篩選
      operationId: browseProducts
      parameters:
        - name: page
          in: query
          required: false
          schema:
            type: integer
            format: int32
            default: 0
        - name: size
          in: query
          required: false
          schema:
            type: integer
            format: int32
            default: 10
        - name: category
          in: query
          required: false
          schema:
            type: string
        - name: minPrice
          in: query
          required: false
          schema:
            type: number
        - name: maxPrice
          in: query
          required: false
          schema:
            type: number
        - name: minRating
          in: query
          required: false
          schema:
            type: integer
            format: int32
        - name: sort
          in: query
          required: false
          schema:
            type: string
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: object
                additionalProperties:
                  type: object
  /api/consumer/products/{productId}:
    get:
      tags:
        - 消費者商品
      summary: 獲取商品詳情
      description: 獲取指定商品的詳細信息
      operationId: getProductDetail
      parameters:
        - name: productId
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: object
                additionalProperties:
                  type: object
  /api/consumer/products/{productId}/related:
    get:
      tags:
        - 消費者商品
      summary: 獲取相關商品
      description: 獲取與指定商品相關的其他商品
      operationId: getRelatedProducts
      parameters:
        - name: productId
          in: path
          required: true
          schema:
            type: string
        - name: limit
          in: query
          required: false
          schema:
            type: integer
            format: int32
            default: 5
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  type: object
                  additionalProperties:
                    type: object
  /api/consumer/products/{productId}/price-history:
    get:
      tags:
        - 消費者商品
      summary: 獲取商品價格歷史
      description: 獲取指定商品的價格變化歷史
      operationId: getProductPriceHistory
      parameters:
        - name: productId
          in: path
          required: true
          schema:
            type: string
        - name: days
          in: query
          required: false
          schema:
            type: integer
            format: int32
            default: 30
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: object
                additionalProperties:
                  type: object
  /api/consumer/products/trending:
    get:
      tags:
        - 消費者商品
      summary: 獲取熱門商品
      description: 獲取當前熱門商品
      operationId: getTrendingProducts
      parameters:
        - name: limit
          in: query
          required: false
          schema:
            type: integer
            format: int32
            default: 10
        - name: category
          in: query
          required: false
          schema:
            type: string
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  type: object
                  additionalProperties:
                    type: object
  /api/consumer/products/search:
    get:
      tags:
        - 消費者商品
      summary: 搜尋商品
      description: 根據關鍵字搜尋商品
      operationId: searchProducts
      parameters:
        - name: keyword
          in: query
          required: true
          schema:
            type: string
        - name: page
          in: query
          required: false
          schema:
            type: integer
            format: int32
            default: 0
        - name: size
          in: query
          required: false
          schema:
            type: integer
            format: int32
            default: 10
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: object
                additionalProperties:
                  type: object
  /api/consumer/products/recommendations:
    get:
      tags:
        - 消費者商品
      summary: 獲取推薦商品
      description: 根據客戶ID獲取個人化推薦商品
      operationId: getRecommendedProducts
      parameters:
        - name: customerId
          in: query
          required: true
          schema:
            type: string
        - name: limit
          in: query
          required: false
          schema:
            type: integer
            format: int32
            default: 5
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  type: object
                  additionalProperties:
                    type: object
  /api/consumer/products/new:
    get:
      tags:
        - 消費者商品
      summary: 獲取新品推薦
      description: 獲取最新上架的商品
      operationId: getNewProducts
      parameters:
        - name: limit
          in: query
          required: false
          schema:
            type: integer
            format: int32
            default: 10
        - name: days
          in: query
          required: false
          schema:
            type: integer
            format: int32
            default: 30
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  type: object
                  additionalProperties:
                    type: object
  /api/consumer/products/categories:
    get:
      tags:
        - 消費者商品
      summary: 獲取商品分類
      description: 獲取所有可用的商品分類
      operationId: getProductCategories
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  type: string
  /api/consumer/cart/{customerId}:
    get:
      tags:
        - 購物車管理
      summary: 獲取購物車
      description: 根據客戶ID獲取購物車信息
      operationId: getShoppingCart
      parameters:
        - name: customerId
          in: path
          description: 客戶ID
          required: true
          schema:
            type: string
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/ShoppingCartDto"
  /api/consumer/cart/{customerId}/inventory-check:
    get:
      tags:
        - 購物車管理
      summary: 檢查庫存可用性
      description: 檢查購物車商品的庫存可用性
      operationId: checkInventoryAvailability
      parameters:
        - name: customerId
          in: path
          description: 客戶ID
          required: true
          schema:
            type: string
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: object
                additionalProperties:
                  type: object
  /api/consumer/cart/{customerId}/checkout:
    get:
      tags:
        - 購物車管理
      summary: 計算結帳金額
      description: 計算購物車的結帳金額
      operationId: calculateCheckout
      parameters:
        - name: customerId
          in: path
          description: 客戶ID
          required: true
          schema:
            type: string
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: object
                additionalProperties:
                  type: object
  /api/activities:
    get:
      tags:
        - 活動記錄
      summary: 獲取活動記錄列表
      description: 查詢系統中的活動記錄，支援限制返回數量。活動記錄包含訂單狀態更新、支付處理、庫存變動等各種業務操作的歷史記錄。
      operationId: getActivities
      parameters:
        - name: limit
          in: query
          description: 限制返回的活動記錄數量，用於分頁控制
          required: false
          schema:
            maximum: 100
            minimum: 1
            type: string
          example: 10
      responses:
        "200":
          description: 成功獲取活動記錄列表
          content:
            application/json:
              schema:
                type: string
                example:
                  success: true
                  data:
                    - id: order-550e8400-e29b-41d4-a716-446655440001
                      type: order
                      title: 訂單狀態更新
                      description: 客戶 王淑芬 的訂單 550e8400-e29b-41d4-a716-446655440001
                      timestamp: 587 天前
                      status: info
                      metadata:
                        orderId: 550e8400-e29b-41d4-a716-446655440001
                        customerId: 660e8400-e29b-41d4-a716-446655440001
                        amount: 6420.0
        "500":
          description: 系統內部錯誤
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/StandardErrorResponse"
        "400":
          description: 請求參數無效
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/StandardErrorResponse"
  /actuator:
    get:
      tags:
        - Actuator
      summary: Actuator root web endpoint
      operationId: links
      responses:
        "200":
          description: OK
          content:
            application/vnd.spring-boot.actuator.v3+json:
              schema:
                type: object
                additionalProperties:
                  type: object
                  additionalProperties:
                    $ref: "#/components/schemas/Link"
            application/vnd.spring-boot.actuator.v2+json:
              schema:
                type: object
                additionalProperties:
                  type: object
                  additionalProperties:
                    $ref: "#/components/schemas/Link"
            application/json:
              schema:
                type: object
                additionalProperties:
                  type: object
                  additionalProperties:
                    $ref: "#/components/schemas/Link"
  /actuator/health:
    get:
      tags:
        - Actuator
      summary: Actuator web endpoint 'health'
      operationId: health
      responses:
        "200":
          description: OK
          content:
            application/vnd.spring-boot.actuator.v3+json:
              schema:
                type: object
            application/vnd.spring-boot.actuator.v2+json:
              schema:
                type: object
            application/json:
              schema:
                type: object
  /api/consumer/cart/{customerId}/coupons/{couponCode}:
    delete:
      tags:
        - 購物車管理
      summary: 移除優惠券
      description: 從購物車移除優惠券
      operationId: removeCoupon
      parameters:
        - name: customerId
          in: path
          description: 客戶ID
          required: true
          schema:
            type: string
        - name: couponCode
          in: path
          description: 優惠券代碼
          required: true
          schema:
            type: string
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: object
                additionalProperties:
                  type: string
  /api/consumer/cart/{customerId}/clear:
    delete:
      tags:
        - 購物車管理
      summary: 清空購物車
      description: 清空購物車中的所有商品
      operationId: clearCart
      parameters:
        - name: customerId
          in: path
          description: 客戶ID
          required: true
          schema:
            type: string
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: object
                additionalProperties:
                  type: string
components:
  schemas:
    StandardErrorResponse:
      required:
        - code
        - message
        - path
        - timestamp
      type: object
      properties:
        code:
          type: string
          description: 錯誤代碼
          example: VALIDATION_ERROR
        message:
          type: string
          description: 錯誤訊息
          example: 請求參數驗證失敗
        timestamp:
          type: string
          description: 錯誤發生時間
          format: date-time
        path:
          type: string
          description: 請求路徑
          example: /api/orders
        details:
          type: array
          description: 詳細錯誤資訊
          nullable: true
          items:
            $ref: "#/components/schemas/FieldError"
        traceId:
          type: string
          description: 追蹤ID，用於問題排查
          nullable: true
          example: abc123-def456-ghi789
      description: 標準錯誤回應
    FieldError:
      required:
        - field
        - message
      type: object
      properties:
        field:
          type: string
          description: 欄位名稱
          example: customerId
        message:
          type: string
          description: 錯誤訊息
          example: 客戶ID不能為空
        rejectedValue:
          type: object
          description: 拒絕的值
          nullable: true
          example: null
        code:
          type: string
          description: 錯誤代碼
          nullable: true
          example: NotBlank
      description: 欄位錯誤詳情
      nullable: true
    ProductAttributeDto:
      required:
        - name
        - type
        - value
      type: object
      properties:
        name:
          maxLength: 50
          minLength: 0
          type: string
          description: 屬性名稱
          example: 顏色
        value:
          maxLength: 100
          minLength: 0
          type: string
          description: 屬性值
          example: 太空黑
        type:
          type: string
          description: 屬性類型
          example: COLOR
          enum:
            - TEXT
            - NUMBER
            - BOOLEAN
            - COLOR
            - SIZE
            - MATERIAL
        unit:
          maxLength: 20
          minLength: 0
          type: string
          description: 屬性單位
          example: 公分
        displayOrder:
          minimum: 0
          type: integer
          description: 屬性顯示順序
          format: int32
          example: 1
        isKey:
          type: boolean
          description: 是否為關鍵屬性
          example: true
        searchable:
          type: boolean
          description: 是否可搜尋
          example: true
        description:
          maxLength: 200
          minLength: 0
          type: string
          description: 屬性描述
          example: 產品的主要顏色
      description: 產品屬性資訊
    ProductDimensions:
      type: object
      properties:
        length:
          minimum: 0
          exclusiveMinimum: false
          type: number
          description: 長度（公分）
          format: double
          example: 15.99
        width:
          minimum: 0
          exclusiveMinimum: false
          type: number
          description: 寬度（公分）
          format: double
          example: 7.67
        height:
          minimum: 0
          exclusiveMinimum: false
          type: number
          description: 高度（公分）
          format: double
          example: 0.825
      description: 產品尺寸資訊
    ProductImageDto:
      required:
        - id
        - sortOrder
        - type
        - url
      type: object
      properties:
        id:
          type: string
          description: 圖片唯一識別碼
          example: img-001
        url:
          pattern: ^https?://.*\.(jpg|jpeg|png|gif|webp)$
          type: string
          description: 圖片URL
          format: uri
          example: https://example.com/images/product/iphone15pro.jpg
        altText:
          maxLength: 200
          minLength: 0
          type: string
          description: 圖片替代文字
          example: iPhone 15 Pro 太空黑色正面圖
        title:
          maxLength: 100
          minLength: 0
          type: string
          description: 圖片標題
          example: iPhone 15 Pro - 正面視圖
        type:
          type: string
          description: 圖片類型
          example: PRIMARY
          enum:
            - PRIMARY
            - GALLERY
            - THUMBNAIL
            - DETAIL
        sortOrder:
          minimum: 0
          type: integer
          description: 圖片排序順序
          format: int32
          example: 1
        width:
          minimum: 1
          type: integer
          description: 圖片寬度（像素）
          format: int32
          example: 800
        height:
          minimum: 1
          type: integer
          description: 圖片高度（像素）
          format: int32
          example: 600
        fileSize:
          minimum: 1
          type: integer
          description: 圖片檔案大小（位元組）
          format: int64
          example: 102400
        mimeType:
          type: string
          description: 圖片MIME類型
          example: image/jpeg
          enum:
            - image/jpeg
            - image/png
            - image/gif
            - image/webp
      description: 產品圖片資訊
    ProductStatus:
      type: string
      description: 產品狀態
      example: ACTIVE
      enum:
        - ACTIVE
        - INACTIVE
        - DISCONTINUED
        - DRAFT
        - OUT_OF_STOCK
        - ACTIVE
        - INACTIVE
        - DISCONTINUED
        - DRAFT
        - OUT_OF_STOCK
    UpdateProductRequest:
      type: object
      properties:
        name:
          maxLength: 100
          minLength: 0
          type: string
          description: 產品名稱
          example: iPhone 15 Pro
        description:
          maxLength: 2000
          minLength: 0
          type: string
          description: 產品詳細描述，支援Markdown格式
          example: 最新款iPhone，配備A17 Pro晶片，支援USB-C接口，具備專業級攝影功能
        price:
          minimum: 0.01
          exclusiveMinimum: false
          type: number
          description: 產品價格（必須大於0）
          format: decimal
          example: 35900.0
        currency:
          pattern: "^[A-Z]{3}$"
          type: string
          description: 貨幣代碼（ISO 4217標準）
          example: TWD
          enum:
            - TWD
            - USD
            - EUR
            - JPY
            - CNY
            - KRW
            - HKD
            - SGD
        category:
          type: string
          description: 產品分類類型
          example: ELECTRONICS
          enum:
            - ELECTRONICS
            - FASHION
            - HOME_LIVING
            - SPORTS_FITNESS
            - BEAUTY_CARE
            - FOOD_BEVERAGE
            - BOOKS_STATIONERY
            - TOYS_GAMES
            - AUTOMOTIVE
            - OTHER
        status:
          $ref: "#/components/schemas/ProductStatus"
        stockQuantity:
          minimum: 0
          type: integer
          description: 庫存數量
          format: int32
          example: 100
        weight:
          minimum: 0
          type: number
          description: 產品重量（公克）
          format: double
          example: 187.0
        dimensions:
          $ref: "#/components/schemas/ProductDimensions"
        sku:
          maxLength: 50
          minLength: 0
          pattern: "^[A-Z0-9\\-_]*$"
          type: string
          description: 產品SKU（庫存單位）
          example: IPHONE15PRO-128GB-BLACK
        barcode:
          pattern: "^\\d{12,13}$"
          type: string
          description: 產品條碼（EAN-13或UPC-A格式）
          example: 1234567890123
        brand:
          maxLength: 50
          minLength: 0
          type: string
          description: 產品品牌
          example: Apple
        model:
          maxLength: 100
          minLength: 0
          type: string
          description: 產品型號
          example: iPhone 15 Pro
        tags:
          maxItems: 20
          minItems: 0
          type: array
          description: 產品標籤列表（用於搜尋和分類）
          example:
            - smartphone
            - premium
            - 5G
          items:
            maxLength: 30
            minLength: 0
            type: string
            description: 產品標籤列表（用於搜尋和分類）
            example: "[\"smartphone\",\"premium\",\"5G\"]"
        images:
          maxItems: 10
          minItems: 0
          type: array
          description: 產品圖片列表
          items:
            $ref: "#/components/schemas/ProductImageDto"
        attributes:
          maxItems: 50
          minItems: 0
          type: array
          description: 產品屬性列表（如顏色、尺寸、材質等）
          items:
            $ref: "#/components/schemas/ProductAttributeDto"
        warrantyMonths:
          maximum: 120
          minimum: 0
          type: integer
          description: 產品保固期（月）
          format: int32
          example: 12
        manufacturer:
          maxLength: 100
          minLength: 0
          type: string
          description: 產品製造商
          example: Apple Inc.
        countryOfOrigin:
          maxLength: 50
          minLength: 0
          type: string
          description: 產品原產地
          example: 中國
      description: 產品更新請求資料
      example:
        name: iPhone 15 Pro
        description: 最新款iPhone，配備A17 Pro晶片，支援USB-C接口
        price: 35900.0
        currency: TWD
        category: ELECTRONICS
        status: ACTIVE
        stockQuantity: 100
        weight: 187.0
        dimensions:
          length: 15.99
          width: 7.67
          height: 0.825
        sku: IPHONE15PRO-128GB-BLACK
        barcode: 1234567890123
        brand: Apple
        model: iPhone 15 Pro
        tags:
          - smartphone
          - premium
          - 5G
        images:
          - id: img-001
            url: https://example.com/images/iphone15pro-front.jpg
            altText: iPhone 15 Pro 正面圖
            type: PRIMARY
            sortOrder: 1
        attributes:
          - name: 顏色
            value: 太空黑
            type: COLOR
            displayOrder: 1
            isKey: true
    UpdateCommissionRateRequest:
      required:
        - eventRate
        - normalRate
      type: object
      properties:
        normalRate:
          maximum: 100
          minimum: 0
          type: integer
          description: 一般佣金費率，以百分比表示 (0-100)，適用於日常銷售
          format: int32
          example: 5
        eventRate:
          maximum: 100
          minimum: 0
          type: integer
          description: 活動佣金費率，以百分比表示 (0-100)，適用於特殊促銷活動期間
          format: int32
          example: 8
      description: 佣金費率更新請求，包含一般費率和活動費率
      example:
        normalRate: 5
        eventRate: 8
    PricingRuleDto:
      type: object
      properties:
        priceId:
          type: string
        productId:
          type: string
        promotionId:
          type: string
        finalPrice:
          type: number
          format: double
        currency:
          type: string
        discountPercentage:
          type: number
          format: double
        discountAmount:
          type: number
          format: double
        effectiveFrom:
          type: string
          format: date-time
        effectiveTo:
          type: string
          format: date-time
        active:
          type: boolean
        productCategory:
          type: string
          enum:
            - ELECTRONICS
            - FASHION
            - GROCERIES
            - HOME_APPLIANCES
            - BEAUTY
            - SPORTS
            - BOOKS
            - TOYS
            - AUTOMOTIVE
            - HEALTH
            - GENERAL
        normalCommissionRate:
          type: integer
          format: int32
        eventCommissionRate:
          type: integer
          format: int32
    UpdateQuantityRequest:
      type: object
      properties:
        quantity:
          type: integer
          format: int32
    CreatePricingRuleRequest:
      required:
        - currency
        - effectiveFrom
        - effectiveTo
        - finalPrice
        - pricingStrategy
        - productCategory
        - productId
      type: object
      properties:
        productId:
          pattern: "^PROD-[0-9]{3,}$"
          type: string
          description: 產品唯一識別碼
          example: PROD-001
        promotionId:
          pattern: "^PROMO-[0-9]{4}-[0-9]{3}$"
          type: string
          description: 促銷活動識別碼，可選欄位，用於關聯特定促銷活動
          example: PROMO-2024-001
        finalPrice:
          maximum: 999999.99
          minimum: 0.01
          type: number
          description: 最終價格，經過所有折扣計算後的實際售價
          format: double
          example: 899.99
        currency:
          type: string
          description: 貨幣代碼，遵循 ISO 4217 標準
          example: TWD
          enum:
            - TWD
            - USD
            - EUR
            - JPY
            - CNY
        discountPercentage:
          maximum: 100.0
          minimum: 0.0
          type: number
          description: 折扣百分比，範圍 0-100，表示折扣的百分比數值
          format: double
          example: 15.0
        discountAmount:
          minimum: 0.0
          type: number
          description: 固定折扣金額，與折扣百分比擇一使用
          format: double
          example: 100.0
        effectiveFrom:
          type: string
          description: 定價規則生效開始時間
          format: date-time
        effectiveTo:
          type: string
          description: 定價規則生效結束時間
          format: date-time
        productCategory:
          type: string
          description: 產品類別枚舉，用於商品分類管理
          example: ELECTRONICS
          enum:
            - ELECTRONICS
            - FASHION
            - GROCERIES
            - HOME_APPLIANCES
            - BEAUTY
            - SPORTS
            - BOOKS
            - TOYS
            - AUTOMOTIVE
            - HEALTH
            - GENERAL
        pricingStrategy:
          type: string
          description: 定價策略類型
          example: PERCENTAGE_DISCOUNT
          enum:
            - PERCENTAGE_DISCOUNT
            - FIXED_AMOUNT_DISCOUNT
            - BUY_ONE_GET_ONE
            - TIERED_PRICING
            - MEMBER_EXCLUSIVE
            - TIME_LIMITED_PROMOTION
            - BUNDLE_PRICING
            - STANDARD_PRICING
      description: 定價規則創建請求，包含產品資訊、定價策略和有效期間
      example:
        productId: PROD-001
        promotionId: PROMO-2024-001
        finalPrice: 899.99
        currency: TWD
        discountPercentage: 15.0
        discountAmount: 100.0
        effectiveFrom: 2024-01-01T00:00:00
        effectiveTo: 2024-12-31T23:59:59
        productCategory: ELECTRONICS
        pricingStrategy: PERCENTAGE_DISCOUNT
    PaymentRequest:
      required:
        - amount
        - orderId
      type: object
      properties:
        orderId:
          pattern: "^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$"
          type: string
          description: 關聯的訂單唯一識別碼，必須是有效的UUID格式
          example: 123e4567-e89b-12d3-a456-426614174000
        amount:
          minimum: 0.01
          exclusiveMinimum: false
          type: number
          description: 支付金額，使用BigDecimal確保精度，最小值為0.01
          format: decimal
          example: 1299.99
        currency:
          pattern: "^[A-Z]{3}$"
          type: string
          description: ISO 4217貨幣代碼，支援主要國際貨幣
          example: TWD
          enum:
            - TWD
            - USD
            - EUR
            - JPY
          default: TWD
        paymentMethod:
          type: string
          description: 支付方式，決定使用何種支付管道進行交易
          example: CREDIT_CARD
          enum:
            - CREDIT_CARD
            - BANK_TRANSFER
            - DIGITAL_WALLET
            - CASH_ON_DELIVERY
          default: CREDIT_CARD
        paymentDetails:
          type: object
          additionalProperties:
            type: object
            description: 支付詳細資訊，包含支付方式特定的額外資料。注意：敏感資訊如完整卡號、CVV等不應包含在此欄位中
            nullable: true
            writeOnly: true
            example:
              cardNumber: '****-****-****-1234'
              expiryDate: 12/25
              cardHolderName: 王小明
              bankCode: '012'
          description: 支付詳細資訊，包含支付方式特定的額外資料。注意：敏感資訊如完整卡號、CVV等不應包含在此欄位中
          nullable: true
          writeOnly: true
          example:
            cardNumber: '****-****-****-1234'
            expiryDate: 12/25
            cardHolderName: 王小明
            bankCode: '012'
      description: 支付請求資料
      example:
        orderId: 123e4567-e89b-12d3-a456-426614174000
        amount: 1299.99
        currency: TWD
        paymentMethod: CREDIT_CARD
        paymentDetails:
          cardNumber: '****-****-****-1234'
          expiryDate: 12/25
          cvv: '***'
    PaymentResponse:
      required:
        - amount
        - canRetry
        - createdAt
        - currency
        - id
        - orderId
        - status
        - updatedAt
      type: object
      properties:
        id:
          type: string
          description: 支付交易的唯一識別碼，UUID格式
          example: 123e4567-e89b-12d3-a456-426614174000
        orderId:
          type: string
          description: 關聯的訂單唯一識別碼，UUID格式
          example: 456e7890-e89b-12d3-a456-426614174001
        amount:
          type: number
          description: 支付金額，使用BigDecimal確保精度
          format: decimal
          example: 1299.99
        currency:
          pattern: "^[A-Z]{3}$"
          type: string
          description: ISO 4217貨幣代碼
          example: TWD
        status:
          type: string
          description: 支付狀態，反映當前支付交易的處理狀態
          example: COMPLETED
          enum:
            - PENDING
            - PROCESSING
            - COMPLETED
            - FAILED
            - CANCELLED
            - REFUNDED
        paymentMethod:
          type: string
          description: 使用的支付方式
          example: CREDIT_CARD
          enum:
            - CREDIT_CARD
            - BANK_TRANSFER
            - DIGITAL_WALLET
            - CASH_ON_DELIVERY
        transactionId:
          type: string
          description: 第三方支付服務提供商的交易識別碼，僅在支付成功時提供
          nullable: true
          readOnly: true
          example: txn_1234567890abcdef
        failureReason:
          type: string
          description: 支付失敗的詳細原因，僅在支付狀態為FAILED時提供
          nullable: true
          readOnly: true
          example: 信用卡餘額不足
        createdAt:
          type: string
          description: 支付記錄的創建時間，ISO 8601格式
          format: date-time
        updatedAt:
          type: string
          description: 支付記錄的最後更新時間，ISO 8601格式
          format: date-time
        canRetry:
          type: boolean
          description: 指示此支付是否允許重試，通常在支付失敗時為true
          example: true
      description: 支付回應資料，包含支付交易的完整狀態和詳細資訊
      example:
        id: 123e4567-e89b-12d3-a456-426614174000
        orderId: 456e7890-e89b-12d3-a456-426614174001
        amount: 1299.99
        currency: TWD
        status: COMPLETED
        paymentMethod: CREDIT_CARD
        transactionId: txn_1234567890abcdef
        createdAt: 2024-01-15T10:30:00
        updatedAt: 2024-01-15T10:35:00
        canRetry: false
    CreateOrderRequest:
      required:
        - customerId
        - shippingAddress
      type: object
      properties:
        customerId:
          maxLength: 50
          minLength: 0
          type: string
          description: 客戶ID，用於識別下訂單的客戶
          example: customer-123
        shippingAddress:
          maxLength: 200
          minLength: 0
          type: string
          description: 配送地址，訂單商品的配送目的地
          example: 台北市信義區信義路五段7號
      description: 創建訂單請求
      example:
        customerId: customer-123
        shippingAddress: 台北市信義區信義路五段7號
    AddOrderItemRequest:
      required:
        - orderId
        - price
        - productId
        - productName
        - quantity
      type: object
      properties:
        orderId:
          maxLength: 50
          minLength: 0
          type: string
          description: 目標訂單ID，指定要添加商品項目的訂單
          example: order-123
        productId:
          maxLength: 50
          minLength: 0
          type: string
          description: 商品ID，要添加的商品唯一識別碼
          example: product-456
        productName:
          maxLength: 100
          minLength: 0
          type: string
          description: 商品名稱，用於顯示和確認
          example: iPhone 15 Pro
        quantity:
          maximum: 999
          minimum: 1
          type: integer
          description: 購買數量，必須為正整數
          format: int32
          example: 2
        price:
          type: number
          description: 商品單價
          example: 500.0
      description: 添加訂單項目請求
      example:
        orderId: order-123
        productId: product-456
        productName: iPhone 15 Pro
        quantity: 2
        price: 500.00 TWD
    AdjustInventoryRequest:
      required:
        - quantity
        - reason
        - type
      type: object
      properties:
        quantity:
          maximum: 999999
          minimum: 1
          type: integer
          description: 調整數量，必須為正整數。對於INCREASE和DECREASE類型，表示增加或減少的數量；對於SET類型，表示設定的目標數量
          format: int32
          example: 10
        reason:
          maxLength: 255
          type: string
          description: 調整原因，用於記錄庫存調整的業務原因，便於後續追蹤和審計
          example: 補貨入庫
        type:
          pattern: ^(INCREASE|DECREASE|SET)$
          type: string
          description: "調整類型，指定庫存調整的操作方式。INCREASE: 增加庫存，DECREASE: 減少庫存，SET: 設定庫存為指\
            定數量"
          example: INCREASE
          enum:
            - INCREASE
            - DECREASE
            - SET
      description: 庫存調整請求資料，包含調整數量、調整原因和調整類型
    InventoryResponse:
      required:
        - availableQuantity
        - createdAt
        - id
        - productId
        - productName
        - reservedQuantity
        - status
        - threshold
        - totalQuantity
        - updatedAt
      type: object
      properties:
        id:
          type: string
          description: 庫存記錄唯一識別碼
          example: INV-001
        productId:
          type: string
          description: 產品唯一識別碼
          example: PROD-001
        productName:
          type: string
          description: 產品名稱
          example: iPhone 15 Pro
        totalQuantity:
          minimum: 0
          type: integer
          description: 總庫存數量，包含可用庫存和預留庫存
          format: int32
          example: 100
        availableQuantity:
          minimum: 0
          type: integer
          description: 可用庫存數量，可以立即銷售的庫存
          format: int32
          example: 80
        reservedQuantity:
          minimum: 0
          type: integer
          description: 預留庫存數量，已被訂單預留但尚未出貨的庫存
          format: int32
          example: 20
        threshold:
          minimum: 0
          type: integer
          description: 庫存警戒閾值，當可用庫存低於此值時需要補貨
          format: int32
          example: 10
        status:
          type: string
          description: 庫存狀態
          example: SUFFICIENT
          enum:
            - SUFFICIENT
            - LOW_STOCK
            - OUT_OF_STOCK
            - RESERVED
        createdAt:
          type: string
          description: 庫存記錄創建時間
          format: date-time
        updatedAt:
          type: string
          description: 庫存記錄最後更新時間
          format: date-time
      description: 庫存資訊回應資料，包含產品的完整庫存狀態和相關資訊
    ApplyPromotionRequest:
      type: object
      properties:
        promotionId:
          type: string
    AddItemRequest:
      type: object
      properties:
        productId:
          type: string
        quantity:
          type: integer
          format: int32
        unitPrice:
          type: number
          format: double
    ApplyCouponRequest:
      type: object
      properties:
        couponCode:
          type: string
    DatabaseInfo:
      type: object
      properties:
        url:
          type: string
        driverClass:
          type: string
        flywayLocations:
          type: string
    EventingInfo:
      type: object
      properties:
        inMemoryEvents:
          type: boolean
        kafkaEnabled:
          type: boolean
        kafkaBootstrapServers:
          type: string
    ProfileInfoResponse:
      type: object
      properties:
        activeProfiles:
          type: array
          items:
            type: string
        defaultProfiles:
          type: array
          items:
            type: string
        profileName:
          type: string
        profileDescription:
          type: string
        features:
          type: object
          additionalProperties:
            type: boolean
        database:
          $ref: "#/components/schemas/DatabaseInfo"
        eventing:
          $ref: "#/components/schemas/EventingInfo"
    SequenceTrackingStatisticsDto:
      type: object
      properties:
        totalAggregates:
          type: integer
          format: int32
        totalRecords:
          type: integer
          format: int32
        validEvents:
          type: integer
          format: int64
        duplicateEvents:
          type: integer
          format: int64
        outOfOrderEvents:
          type: integer
          format: int64
        validRate:
          type: number
          format: double
        duplicateRate:
          type: number
          format: double
        outOfOrderRate:
          type: number
          format: double
    RetryStatisticsDto:
      type: object
      properties:
        activeRetries:
          type: integer
          format: int32
        totalRetryAttempts:
          type: integer
          format: int64
    ProcessingStatisticsDto:
      type: object
      properties:
        totalProcessed:
          type: integer
          format: int64
        totalSucceeded:
          type: integer
          format: int64
        totalFailed:
          type: integer
          format: int64
        totalTimedOut:
          type: integer
          format: int64
        activeProcessing:
          type: integer
          format: int32
        successRate:
          type: number
          format: double
        failureRate:
          type: number
          format: double
        timeoutRate:
          type: number
          format: double
    BackpressureStatusDto:
      type: object
      properties:
        level:
          type: string
        currentConcurrentEvents:
          type: integer
          format: int32
        currentQueueSize:
          type: integer
          format: int32
        eventsInCurrentWindow:
          type: integer
          format: int64
        lastLevelChangeTime:
          type: string
          format: date-time
    SystemHealthStatusDto:
      type: object
      properties:
        processingStats:
          $ref: "#/components/schemas/ProcessingStatisticsDto"
        retryStats:
          $ref: "#/components/schemas/RetryStatisticsDto"
        backpressureStatus:
          $ref: "#/components/schemas/BackpressureStatusDto"
        sequenceStats:
          $ref: "#/components/schemas/SequenceTrackingStatisticsDto"
        healthScore:
          type: integer
          format: int32
        healthy:
          type: boolean
    DatabaseValidationReport:
      type: object
      properties:
        databaseType:
          type: string
        status:
          type: string
        message:
          type: string
        timestamp:
          type: integer
          format: int64
        migrationInfo:
          type: string
    DatabaseHealthStatus:
      type: object
      properties:
        status:
          type: string
        details:
          type: object
          additionalProperties:
            type: object
        timestamp:
          type: integer
          format: int64
    DatabaseHealthInfo:
      type: object
      properties:
        databaseType:
          type: string
        migrationPath:
          type: string
        status:
          type: string
        message:
          type: string
        timestamp:
          type: integer
          format: int64
    CartItemDto:
      type: object
      properties:
        productId:
          type: string
        productName:
          type: string
        quantity:
          type: integer
          format: int32
        unitPrice:
          type: number
        totalPrice:
          type: number
    ShoppingCartDto:
      type: object
      properties:
        id:
          type: string
        customerId:
          type: string
        items:
          type: array
          items:
            $ref: "#/components/schemas/CartItemDto"
        totalAmount:
          type: number
        discountAmount:
          type: number
        status:
          type: string
          enum:
            - ACTIVE
            - ABANDONED
            - CHECKED_OUT
            - EXPIRED
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
    Link:
      type: object
      properties:
        href:
          type: string
        templated:
          type: boolean
  securitySchemes:
    bearerAuth:
      type: http
      description: "請在此處輸入 JWT Token，格式：Bearer {token}"
      scheme: bearer
      bearerFormat: JWT
    apiKey:
      type: apiKey
      description: 請在此處輸入 API Key
      name: X-API-Key
      in: header
