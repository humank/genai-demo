# Production Profile Configuration
# This configuration is activated when SPRING_PROFILES_ACTIVE=production

spring:
  
  # Production Database Configuration
  datasource:
    url: jdbc:postgresql://${DB_HOST:localhost}:${DB_PORT:5432}/${DB_NAME:genaidemo}
    username: ${DB_USERNAME:genaidemo}
    password: ${DB_PASSWORD:password}
    driver-class-name: org.postgresql.Driver
    hikari:
      maximum-pool-size: 20
      minimum-idle: 5
      idle-timeout: 300000
      connection-timeout: 20000
      validation-timeout: 5000
      leak-detection-threshold: 60000
  
  # JPA Configuration for Production
  jpa:
    hibernate:
      ddl-auto: validate
    show-sql: false
    properties:
      hibernate:
        dialect: org.hibernate.dialect.PostgreSQLDialect
        format_sql: false
        use_sql_comments: false
  
  # Flyway Configuration
  flyway:
    locations: classpath:db/migration/postgresql
    validate-on-migrate: true
    out-of-order: false
    
  # Kafka Configuration for Production
  kafka:
    enabled: true
    bootstrap-servers: ${KAFKA_BOOTSTRAP_SERVERS:localhost:9092}
    producer:
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.springframework.kafka.support.serializer.JsonSerializer
      acks: all
      retries: 3
      batch-size: 16384
      linger-ms: 5
      buffer-memory: 33554432
    consumer:
      group-id: genai-demo-group
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: org.springframework.kafka.support.serializer.JsonDeserializer
      auto-offset-reset: earliest
      enable-auto-commit: false
      properties:
        spring.json.trusted.packages: "solid.humank.genaidemo.domain"

# Logging Configuration for Production
logging:
  level:
    root: INFO
    solid.humank.genaidemo: INFO
    solid.humank.genaidemo.infrastructure.security: INFO
    org.springframework.kafka: WARN
    org.springframework.security: INFO
    org.hibernate: WARN
    SECURITY: INFO
  pattern:
    console: "%d{yyyy-MM-dd HH:mm:ss} [%thread] %-5level [%X{correlationId:-}] %logger{36} - %msg%n"
  config: classpath:logback-spring.xml

# Management and Health Check Configuration for Production
management:
  endpoints:
    web:
      exposure:
        include: health,info,metrics,prometheus,security
  endpoint:
    health:
      show-details: when-authorized
      show-components: always
      probes:
        enabled: true
      group:
        liveness:
          include: "livenessState"
        readiness:
          include: "readinessState,db,kafka,applicationReadiness"
  health:
    livenessstate:
      enabled: true
    readinessstate:
      enabled: true
  metrics:
    export:
      prometheus:
        enabled: true
        step: 10s
        descriptions: true
      cloudwatch:
        enabled: true
        namespace: GenAIDemo/Production
        step: 1m
        batch-size: 20
    distribution:
      percentiles-histogram:
        http.server.requests: true
        spring.data.repository.invocations: true
        health.check.duration: true
      percentiles:
        http.server.requests: 0.5, 0.95, 0.99
        spring.data.repository.invocations: 0.5, 0.95, 0.99
        health.check.duration: 0.5, 0.95, 0.99
    tags:
      application: ${spring.application.name}
      version: ${spring.application.version}
      environment: production
      region: ${AWS_REGION:ap-northeast-1}

# AWS Configuration
aws:
  region: ${AWS_REGION:ap-northeast-1}
  xray:
    enabled: true
    tracing-name: genai-demo-production
  cloudwatch:
    enabled: true
    namespace: GenAIDemo/Production

# Distributed Tracing Configuration for Production
tracing:
  enabled: true
  sampling:
    ratio: 0.1  # Sample 10% of traces in production
  xray:
    enabled: true
    daemon-address: ${XRAY_DAEMON_ADDRESS:127.0.0.1:2000}
  correlation:
    enabled: true

# OpenTelemetry Configuration for Production
otel:
  service:
    name: ${spring.application.name}
    version: ${spring.application.version}
  resource:
    attributes:
      deployment.environment: production
      service.namespace: genai-demo
      service.instance.id: ${HOSTNAME:unknown}
  traces:
    exporter: xray
  metrics:
    exporter: none

# Health Check Configuration
health:
  check:
    database:
      enabled: true
      timeout: 5s
    kafka:
      enabled: true
      timeout: 10s
    system-resources:
      enabled: true
      memory-threshold: 85
      disk-threshold: 90
  recovery:
    enabled: true
    max-attempts: 3
    cooldown: 60s

# Analytics Configuration for Production
analytics:
  enabled: true
  firehose:
    stream-name: ${ANALYTICS_FIREHOSE_STREAM_NAME:genai-demo-production-domain-events-firehose}
    batch-size: 100
    max-wait-time-ms: 5000
  data-lake:
    bucket-name: ${ANALYTICS_DATA_LAKE_BUCKET:genai-demo-production-data-lake}
    event-prefix: "domain-events/"
  glue:
    database-name: ${ANALYTICS_GLUE_DATABASE:genai_demo_production_data_lake}
    crawler-name: ${ANALYTICS_GLUE_CRAWLER:genai-demo-production-domain-events-crawler}
  quicksight:
    data-source-id: ${ANALYTICS_QUICKSIGHT_DATASOURCE:genai-demo-production-athena-datasource}
    executive-dashboard-id: ${ANALYTICS_EXECUTIVE_DASHBOARD:genai-demo-production-executive-dashboard}
    operations-dashboard-id: ${ANALYTICS_OPERATIONS_DASHBOARD:genai-demo-production-operations-dashboard}

# Profile Configuration
genai-demo:
  profile:
    name: production
    description: "Production environment with PostgreSQL, Kafka, and AWS services"
    features:
      h2-console: false
      debug-logging: false
      in-memory-events: false
      kafka-events: true
      observability-enabled: true
      distributed-tracing: true
      automated-recovery: true
      cloudwatch-metrics: true
      xray-tracing: true
      analytics-enabled: true
      cost-optimization-enabled: true
  
  # Cost Optimization Configuration
  observability:
    metrics:
      sampling:
        enabled: true
        business-metrics-sampling-rate: 1.0
        infrastructure-metrics-sampling-rate: 0.05
        jvm-metrics-sampling-rate: 0.01
        max-cardinality: 5000
        retention-period: P15D
    logging:
      retention:
        optimization-enabled: true
        high-volume-threshold: 500
    rightsizing:
      analysis-enabled: true
      history-retention-minutes: 120
      min-samples-for-recommendation: 30
      cpu-underutilization-threshold: 15.0
      cpu-overutilization-threshold: 85.0
      memory-underutilization-threshold: 25.0
      memory-overutilization-threshold: 90.0
      recommendation-confidence-threshold: 80.0
    cost-optimization:
      enabled: true
      estimated-monthly-cost: 1000.0
      savings-threshold: 25.0
      analysis-interval-minutes: 15
  
  # Security Configuration
  security:
    tls:
      enabled: true
      protocol: TLSv1.3
      require-client-auth: false
      key-store: ${TLS_KEYSTORE_PATH:}
      key-store-password: ${TLS_KEYSTORE_PASSWORD:}
      trust-store: ${TLS_TRUSTSTORE_PATH:}
      trust-store-password: ${TLS_TRUSTSTORE_PASSWORD:}
    monitoring:
      enabled: true
      alert-threshold: PT5M
      max-failed-attempts: 5
      lockout-duration: PT15M
      real-time-alerting: true
  
  # Kafka Security Configuration
  kafka:
    security:
      bootstrap-servers: ${KAFKA_BOOTSTRAP_SERVERS:localhost:9092}
      security-protocol: ${KAFKA_SECURITY_PROTOCOL:SSL}
      ssl-truststore-location: ${KAFKA_SSL_TRUSTSTORE_LOCATION:/etc/ssl/kafka/kafka.client.truststore.jks}
      ssl-truststore-password: ${KAFKA_SSL_TRUSTSTORE_PASSWORD:changeit}
      ssl-keystore-location: ${KAFKA_SSL_KEYSTORE_LOCATION:/etc/ssl/kafka/kafka.client.keystore.jks}
      ssl-keystore-password: ${KAFKA_SSL_KEYSTORE_PASSWORD:changeit}
      ssl-key-password: ${KAFKA_SSL_KEY_PASSWORD:changeit}
      ssl-endpoint-identification-algorithm: https
  
  # Data Retention Policies
  data-retention:
    policies:
      application-logs:
        hot-storage-duration: P30D
        warm-storage-duration: P90D
        cold-storage-duration: P2555D
        auto-cleanup-enabled: true
      security-logs:
        hot-storage-duration: P90D
        warm-storage-duration: P365D
        cold-storage-duration: P2555D
        auto-cleanup-enabled: true
      audit-logs:
        hot-storage-duration: P90D
        warm-storage-duration: P365D
        cold-storage-duration: P3650D
        auto-cleanup-enabled: true
      metrics:
        hot-storage-duration: P15D
        warm-storage-duration: P90D
        cold-storage-duration: P365D
        auto-cleanup-enabled: true
      traces:
        hot-storage-duration: P7D
        warm-storage-duration: P30D
        cold-storage-duration: P90D
        auto-cleanup-enabled: true
      domain-events:
        hot-storage-duration: P30D
        warm-storage-duration: P365D
        cold-storage-duration: P2555D
        auto-cleanup-enabled: true
      personal-data:
        hot-storage-duration: P30D
        warm-storage-duration: P365D
        cold-storage-duration: P2555D
        auto-cleanup-enabled: true
      session-data:
        hot-storage-duration: PT24H
        warm-storage-duration: P7D
        cold-storage-duration: P30D
        auto-cleanup-enabled: true
      temp-data:
        hot-storage-duration: PT1H
        warm-storage-duration: PT24H
        cold-storage-duration: P7D
        auto-cleanup-enabled: true