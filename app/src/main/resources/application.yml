# Base Spring Boot Configuration
# Configuration Precedence Rules:
# 1. Environment Variables (highest priority)
# 2. Profile-specific configuration files (application-{profile}.yml)
# 3. Base configuration file (application.yml)
# 4. Default values (lowest priority)

spring:
  application:
    name: genai-demo
    version: 2.0.0
  profiles:
    active: ${SPRING_PROFILES_ACTIVE:dev}
  
  # Configuration import - conditional based on profile
  config:
    import: "optional:classpath:application-observability.yml"

server:
  port: 8080

# Logging Configuration
logging:
  level:
    root: INFO
    solid.humank.genaidemo: DEBUG
  pattern:
    console: "%d{yyyy-MM-dd HH:mm:ss} [%thread] %-5level %logger{36} - %msg%n"

# Management and Actuator Configuration
management:
  endpoints:
    web:
      exposure:
        include: health,info,metrics,prometheus,env,configprops,beans,mappings
      base-path: /actuator
  endpoint:
    health:
      show-details: always
      show-components: always
      probes:
        enabled: false  # Disable Kubernetes probes for now
    metrics:
      enabled: true

  info:
    env:
      enabled: true
  health:
    livenessstate:
      enabled: true
    readinessstate:
      enabled: true
  metrics:
    export:
      cloudwatch:
        enabled: false  # Will be enabled in production profile
        namespace: GenAIDemo
        step: 1m
    distribution:
      percentiles-histogram:
        http.server.requests: true
        spring.data.repository.invocations: true
      percentiles:
        http.server.requests: 0.5, 0.95, 0.99
        spring.data.repository.invocations: 0.5, 0.95, 0.99
    tags:
      application: ${spring.application.name}
      version: ${spring.application.version}
      environment: ${spring.profiles.active}
    # Enable JVM metrics explicitly
    enable:
      jvm: true
      system: true
      process: true

# Application Information
info:
  app:
    name: ${spring.application.name}
    description: GenAI Demo Application with AWS CDK Observability Integration
    version: 2.0.0
    encoding: UTF-8
    java:
      version: ${java.version}
    profiles:
      active: ${spring.profiles.active}
      
# Distributed Tracing Configuration
tracing:
  enabled: true
  sampling:
    ratio: 1.0  # Sample all traces in development
  jaeger:
    endpoint: http://localhost:14250
  otlp:
    endpoint: http://localhost:4317
  correlation:
    enabled: true

# OpenTelemetry Configuration
otel:
  service:
    name: ${spring.application.name}
    version: ${spring.application.version}
  resource:
    attributes:
      deployment.environment: ${spring.profiles.active}
  traces:
    exporter: jaeger  # Will be overridden in production profile
  metrics:
    exporter: none    # Disable OTEL metrics, use Micrometer instead

# Profile Configuration Validation
app:
  profile:
    name: ${spring.profiles.active:dev}
    description: "Base configuration - profile-specific settings will override"
    features:
      h2-console: false
      debug-logging: false
      in-memory-events: false
      kafka-events: false

genai-demo:
  # 事件發布配置 (預設值，會被 profile 覆蓋)
  events:
    publisher: in-memory  # 預設使用記憶體，生產環境會覆蓋為 kafka
    async: false         # 預設同步，生產環境會覆蓋為 true
  
  # 可觀測性基礎配置
  observability:
    enabled: true        # 預設啟用，可由 profile 覆蓋
    distributed-tracing: true
    
    # 分析配置
    analytics:
      enabled: true
      api-endpoints:
        events: "/api/analytics/events"
        performance: "/api/analytics/performance"
        stats: "/api/analytics/stats"
      
    # 追蹤配置
    tracing:
      enabled: true
      correlation-id-header: "X-Trace-Id"
      session-id-header: "X-Session-Id"
      mdc-keys:
        correlation-id: "correlationId"
        trace-id: "traceId" 
        session-id: "sessionId"
    
    # 指標配置
    metrics:
      sampling:
        enabled: true
        business-metrics-sampling-rate: 1.0
        infrastructure-metrics-sampling-rate: 0.1
        jvm-metrics-sampling-rate: 0.05
        max-cardinality: 10000
        retention-period: P15D
      business-metrics:
        enabled: true
      performance-metrics:
        enabled: true
        web-vitals:
          - "lcp"  # Largest Contentful Paint
          - "fid"  # First Input Delay
          - "cls"  # Cumulative Layout Shift
          - "ttfb" # Time to First Byte
    
    # 日誌配置
    logging:
      structured: true
      correlation-enabled: true
      mdc-integration: true
      retention:
        optimization-enabled: true
        high-volume-threshold: 1000
    
    # WebSocket 配置
    websocket:
      enabled: true
      endpoint: "/ws/analytics"
      heartbeat-interval: 30000
      connection-timeout: 30000
    
    # 資源優化配置
    rightsizing:
      analysis-enabled: true
      history-retention-minutes: 60
      min-samples-for-recommendation: 15
      cpu-underutilization-threshold: 20.0
      cpu-overutilization-threshold: 80.0
      memory-underutilization-threshold: 30.0
      memory-overutilization-threshold: 85.0
      recommendation-confidence-threshold: 75.0
    
    # 成本優化配置
    cost-optimization:
      enabled: true
      estimated-monthly-cost: 500.0
      savings-threshold: 10.0
      analysis-interval-minutes: 15