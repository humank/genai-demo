@startuml DDD分層架構圖
skinparam linetype ortho

' 定義層次
package "介面層 (Interfaces Layer)" as InterfacesLayer {
  [Web Controllers] as WebControllers
  [REST API] as RestAPI
  [GraphQL API] as GraphQLAPI
  [介面層DTO] as InterfaceDTO
}

package "應用層 (Application Layer)" as ApplicationLayer {
  [應用服務] as ApplicationServices
  [應用層DTO] as ApplicationDTO
  [映射器] as Mappers
  [命令/查詢] as Commands
}

package "領域層 (Domain Layer)" as DomainLayer {
  [聚合根] as AggregateRoots
  [實體] as Entities
  [值對象] as ValueObjects
  [領域事件] as DomainEvents
  [領域服務] as DomainServices
  [儲存庫接口] as RepositoryInterfaces
  [規格] as Specifications
}

package "基礎設施層 (Infrastructure Layer)" as InfrastructureLayer {
  package "持久化 (Persistence)" as Persistence {
    [儲存庫實現] as RepositoryImplementations
    [ORM映射] as ORM
    [數據庫] as Database
  }
  
  package "外部系統 (External)" as External {
    [外部服務適配器] as ExternalAdapters
    [消息隊列] as MessageQueue
    [第三方API客戶端] as ThirdPartyClients
  }
  
  package "跨切面關注點 (Cross-Cutting)" as CrossCutting {
    [日誌] as Logging
    [安全] as Security
    [配置] as Configuration
  }
}

' 定義數據流向
InterfaceDTO -[#blue]-> ApplicationDTO : 轉換
ApplicationDTO -[#blue]-> Mappers
Mappers -[#blue]-> AggregateRoots
WebControllers -[#blue]-> ApplicationServices : 使用
RestAPI -[#blue]-> ApplicationServices : 使用
GraphQLAPI -[#blue]-> ApplicationServices : 使用

ApplicationServices -[#blue]-> Commands : 處理
ApplicationServices -[#blue]-> AggregateRoots : 操作
ApplicationServices -[#blue]-> DomainServices : 使用
ApplicationServices -[#blue]-> RepositoryInterfaces : 使用

AggregateRoots -[#blue]-> Entities : 包含
AggregateRoots -[#blue]-> ValueObjects : 使用
AggregateRoots -[#blue]-> DomainEvents : 發布
DomainServices -[#blue]-> AggregateRoots : 協調
DomainServices -[#blue]-> Specifications : 使用
RepositoryInterfaces -[#blue]-> AggregateRoots : 管理

RepositoryImplementations -[#blue]-> RepositoryInterfaces : 實現
RepositoryImplementations -[#blue]-> ORM : 使用
ORM -[#blue]-> Database : 訪問
ExternalAdapters -[#blue]-> ThirdPartyClients : 使用
ExternalAdapters -[#blue]-> MessageQueue : 使用

' 定義依賴方向
InterfacesLayer -[#red]-> ApplicationLayer : 依賴
ApplicationLayer -[#red]-> DomainLayer : 依賴
InfrastructureLayer -[#red]-> DomainLayer : 依賴

' 註解
note right of InterfacesLayer
  處理用戶交互
  只依賴應用層
  不直接依賴領域層
end note

note right of ApplicationLayer
  協調領域對象完成用例
  只依賴領域層
  負責數據轉換
end note

note right of DomainLayer
  包含業務核心邏輯和規則
  不依賴其他層
  定義接口由基礎設施層實現
end note

note right of InfrastructureLayer
  提供技術實現
  依賴領域層
  實現領域層定義的接口
end note

note bottom of Mappers
  負責在不同層之間轉換數據
  防止領域模型洩露到外部
end note

@enduml