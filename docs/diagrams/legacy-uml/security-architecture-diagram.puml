@startuml Security Architecture Diagram

' C4 Model Definitions
!define LAYOUT_WITH_LEGEND
!define SHOW_PERSON_PORTRAIT

' C4 Element Styles
!define C4_COMPONENT_FONT_COLOR #000000
!define C4_COMPONENT_BG_COLOR #85BBF0
!define C4_CONTAINER_FONT_COLOR #000000
!define C4_CONTAINER_BG_COLOR #438DD5
!define C4_SYSTEM_FONT_COLOR #FFFFFF
!define C4_SYSTEM_BG_COLOR #1168BD
!define C4_PERSON_FONT_COLOR #FFFFFF
!define C4_PERSON_BG_COLOR #08427B
!define C4_BOUNDARY_COLOR #444444

' C4 Element Macros
!define Person(e_alias, e_label, e_descr) actor "==e_label\n\ne_descr" as e_alias
!define Container_Boundary(e_alias, e_label) rectangle "==e_label" <<boundary>> as e_alias
!define Container(e_alias, e_label, e_techn, e_descr) rectangle "==e_label\n<size:12>[e_techn]</size>\n\ne_descr" <<container>> as e_alias
!define Component(e_alias, e_label, e_techn, e_descr) rectangle "==e_label\n<size:12>[e_techn]</size>\n\ne_descr" <<component>> as e_alias
!define ComponentDb(e_alias, e_label, e_techn, e_descr) database "==e_label\n<size:12>[e_techn]</size>\n\ne_descr" <<database>> as e_alias
!define System_Ext(e_alias, e_label, e_descr) rectangle "==e_label\n\ne_descr" <<external_system>> as e_alias
!define Rel(e_from, e_to, e_label) e_from --> e_to : "e_label"
!define Rel(e_from, e_to, e_label, e_techn) e_from --> e_to : "e_label\n//<size:10>[e_techn]</size>//"

' Styling
skinparam rectangle {
    FontColor<<component>> C4_COMPONENT_FONT_COLOR
    BackgroundColor<<component>> C4_COMPONENT_BG_COLOR
    FontColor<<container>> C4_CONTAINER_FONT_COLOR
    BackgroundColor<<container>> C4_CONTAINER_BG_COLOR
    FontColor<<boundary>> #444444
    BorderColor<<boundary>> C4_BOUNDARY_COLOR
    BorderStyle<<boundary>> dashed
    FontColor<<external_system>> C4_SYSTEM_FONT_COLOR
    BackgroundColor<<external_system>> #999999
}

skinparam database {
    BackgroundColor C4_COMPONENT_BG_COLOR
}

skinparam actor {
    BackgroundColor C4_PERSON_BG_COLOR
    FontColor C4_PERSON_FONT_COLOR
}

title Order System Security Architecture

' External Actors
Person(customer, "Customer", "Authenticated user")
Person(admin, "Administrator", "System administrator")
Person(anonymous, "Anonymous User", "Unauthenticated user")
Person(attacker, "Potential Attacker", "Malicious actor")

' Security Components
Container_Boundary(security_perimeter, "Security Perimeter") {
    Component(waf, "Web Application Firewall", "WAF", "Filters malicious traffic")
    Component(ddos_protection, "DDoS Protection", "Shield", "Mitigates denial of service attacks")
    Component(api_gateway, "API Gateway", "Gateway", "Routes and secures API requests")
}

Container_Boundary(identity_management, "Identity Management") {
    Component(auth_server, "Authorization Server", "OAuth2/OIDC", "Issues tokens")
    Component(identity_provider, "Identity Provider", "IAM", "Manages user identities")
    ComponentDb(user_store, "User Store", "Database", "Stores user credentials")
    Component(mfa_service, "Multi-Factor Authentication", "Service", "Provides 2FA")
}

Container_Boundary(application_security, "Application Security") {
    Component(auth_filter, "Authentication Filter", "Middleware", "Validates tokens")
    Component(authz_service, "Authorization Service", "RBAC/ABAC", "Enforces access control")
    Component(input_validation, "Input Validation", "Filters", "Validates user input")
    Component(output_encoding, "Output Encoding", "Filters", "Prevents XSS")
}

Container_Boundary(data_security, "Data Security") {
    Component(encryption_service, "Encryption Service", "Service", "Encrypts sensitive data")
    Component(pii_handler, "PII Handler", "Service", "Manages personal data")
    Component(data_masking, "Data Masking", "Service", "Masks sensitive data")
}

Container_Boundary(security_monitoring, "Security Monitoring") {
    Component(audit_logging, "Audit Logging", "Service", "Records security events")
    Component(intrusion_detection, "Intrusion Detection", "System", "Detects suspicious activity")
    Component(security_analytics, "Security Analytics", "Dashboard", "Analyzes security data")
}

' Application Components
Container(web_app, "Web Application", "React", "User interface")
Container(mobile_app, "Mobile Application", "iOS/Android", "Mobile interface")

Container_Boundary(application_core, "Application Core") {
    Component(order_service, "Order Service", "Service", "Manages orders")
    Component(payment_service, "Payment Service", "Service", "Processes payments")
    ComponentDb(database, "Database", "PostgreSQL", "Stores application data")
}

' External Systems
System_Ext(payment_gateway, "Payment Gateway", "External payment processor")

' Authentication Flow
Rel(anonymous, web_app, "Accesses")
Rel(anonymous, mobile_app, "Accesses")
Rel(web_app, api_gateway, "Authenticates")
Rel(mobile_app, api_gateway, "Authenticates")
Rel(api_gateway, auth_server, "Requests token")
Rel(auth_server, identity_provider, "Validates credentials")
Rel(identity_provider, user_store, "Retrieves user")
Rel(identity_provider, mfa_service, "Requests 2FA")
Rel(auth_server, api_gateway, "Issues token")

' Authorization Flow
Rel(customer, api_gateway, "Sends request with token")
Rel(api_gateway, auth_filter, "Validates token")
Rel(auth_filter, authz_service, "Checks permissions")
Rel(authz_service, order_service, "Authorizes access")

' Security Controls
Rel(attacker, waf, "Blocked by")
Rel(attacker, ddos_protection, "Mitigated by")
Rel(api_gateway, input_validation, "Validates requests")
Rel(order_service, output_encoding, "Sanitizes responses")
Rel(order_service, encryption_service, "Encrypts data")
Rel(payment_service, pii_handler, "Processes PII")
Rel(database, data_masking, "Masks sensitive data")

' Monitoring
Rel(api_gateway, audit_logging, "Logs access")
Rel(auth_server, audit_logging, "Logs authentication")
Rel(authz_service, audit_logging, "Logs authorization")
Rel(audit_logging, intrusion_detection, "Feeds events")
Rel(intrusion_detection, security_analytics, "Provides data")

' External Communication
Rel(payment_service, payment_gateway, "Communicates securely", "TLS 1.3")

' Notes
note right of security_perimeter
  <b>Security Perimeter:</b>
  - DDoS protection
  - Bot detection
  - Rate limiting
  - IP filtering
  - TLS termination
end note

note right of identity_management
  <b>Identity Management:</b>
  - OAuth 2.0/OpenID Connect
  - JWT tokens
  - Password policies
  - Account lockout
  - MFA options
end note

note right of application_security
  <b>Security Controls:</b>
  - RBAC/ABAC
  - Input validation
  - Output encoding
  - CSRF protection
  - Security headers
end note

note right of data_security
  <b>Data Protection:</b>
  - Encryption at rest
  - Encryption in transit
  - Data masking
  - PII handling
  - Key management
end note

@enduml