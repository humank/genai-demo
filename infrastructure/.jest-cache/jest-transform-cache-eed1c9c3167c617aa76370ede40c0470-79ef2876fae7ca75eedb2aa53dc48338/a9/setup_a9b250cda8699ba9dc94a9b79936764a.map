{"file":"/Users/yikaikao/git/genai-demo/infrastructure/test/setup.ts","mappings":"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","names":[],"sources":["/Users/yikaikao/git/genai-demo/infrastructure/test/setup.ts"],"sourcesContent":["/**\n * Jest setup file for CDK testing infrastructure\n * Configures global test environment and utilities\n */\n\nimport * as cdk from 'aws-cdk-lib';\n\n// Global test configuration\nbeforeAll(() => {\n    // Set default CDK context for all tests\n    process.env.CDK_DEFAULT_ACCOUNT = '123456789012';\n    process.env.CDK_DEFAULT_REGION = 'ap-northeast-1';\n});\n\n// Global test utilities\ndeclare global {\n    namespace jest {\n        interface Matchers<R> {\n            toHaveResource(resourceType: string, properties?: any): R;\n            toHaveResourceCount(resourceType: string, count: number): R;\n            toMatchSnapshot(): R;\n        }\n    }\n}\n\n// Custom Jest matchers for CDK testing\nexpect.extend({\n    toHaveResource(template: any, resourceType: string, properties?: any) {\n        const resources = template.toJSON().Resources || {};\n        const matchingResources = Object.values(resources).filter(\n            (resource: any) => resource.Type === resourceType\n        );\n\n        if (matchingResources.length === 0) {\n            return {\n                message: () => `Expected template to have resource of type ${resourceType}`,\n                pass: false,\n            };\n        }\n\n        if (properties) {\n            const hasMatchingProperties = matchingResources.some((resource: any) =>\n                this.equals(resource.Properties, expect.objectContaining(properties))\n            );\n\n            if (!hasMatchingProperties) {\n                return {\n                    message: () => `Expected template to have resource of type ${resourceType} with properties ${JSON.stringify(properties)}`,\n                    pass: false,\n                };\n            }\n        }\n\n        return {\n            message: () => `Expected template not to have resource of type ${resourceType}`,\n            pass: true,\n        };\n    },\n\n    toHaveResourceCount(template: any, resourceType: string, expectedCount: number) {\n        const resources = template.toJSON().Resources || {};\n        const matchingResources = Object.values(resources).filter(\n            (resource: any) => resource.Type === resourceType\n        );\n\n        const actualCount = matchingResources.length;\n\n        return {\n            message: () => `Expected ${expectedCount} resources of type ${resourceType}, but found ${actualCount}`,\n            pass: actualCount === expectedCount,\n        };\n    }\n});\n\n// Test data factories\nexport class TestDataFactory {\n    static createTestApp(context?: Record<string, any>): cdk.App {\n        return new cdk.App({\n            context: {\n                'genai-demo:networking': {\n                    'availability-zones': 3,\n                    'enable-vpc-flow-logs': true,\n                    'enable-dns-hostnames': true,\n                    'enable-dns-support': true\n                },\n                'genai-demo:environments': {\n                    'test': {\n                        'vpc-cidr': '10.0.0.0/16',\n                        'nat-gateways': 1,\n                        'retention-policies': {\n                            'logs': 7,\n                            'metrics': 7,\n                            'backups': 7,\n                            'snapshots': 3\n                        }\n                    },\n                    'development': {\n                        'vpc-cidr': '10.1.0.0/16',\n                        'nat-gateways': 1,\n                        'retention-policies': {\n                            'logs': 7,\n                            'metrics': 30,\n                            'backups': 30,\n                            'snapshots': 7\n                        }\n                    },\n                    'production': {\n                        'vpc-cidr': '10.2.0.0/16',\n                        'nat-gateways': 3,\n                        'retention-policies': {\n                            'logs': 90,\n                            'metrics': 365,\n                            'backups': 365,\n                            'snapshots': 30\n                        }\n                    }\n                },\n                'genai-demo:observability': {\n                    'log-retention-days': 7,\n                    'metrics-retention-days': 30,\n                    'trace-sampling-rate': 0.1\n                },\n                'hosted-zone:account=123456789012:domainName=kimkao.io:region=ap-east-2': {\n                    'Id': '/hostedzone/Z2KTO3AQUJG1DT',\n                    'Name': 'kimkao.io.'\n                },\n                ...context\n            }\n        });\n    }\n\n    static createTestStackProps(overrides?: Partial<any>): any {\n        return {\n            environment: 'test',\n            projectName: 'genai-demo-test',\n            env: {\n                account: '123456789012',\n                region: 'ap-northeast-1'\n            },\n            ...overrides\n        };\n    }\n}\n\n// Test utilities\nexport class TestUtils {\n    static getResourcesByType(template: any, resourceType: string): any[] {\n        const resources = template.toJSON().Resources || {};\n        return Object.entries(resources)\n            .filter(([_, resource]: [string, any]) => resource.Type === resourceType)\n            .map(([logicalId, resource]) => ({ logicalId, ...(resource as object) }));\n    }\n\n    static getOutputs(template: any): Record<string, any> {\n        return template.toJSON().Outputs || {};\n    }\n\n    static getParameters(template: any): Record<string, any> {\n        return template.toJSON().Parameters || {};\n    }\n\n    static hasTag(resource: any, key: string, value?: string): boolean {\n        const tags = resource.Properties?.Tags || [];\n        const tag = tags.find((t: any) => t.Key === key);\n        return tag && (value === undefined || tag.Value === value);\n    }\n}"],"version":3}