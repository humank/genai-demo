<?xml version="1.0" encoding="UTF-8"?>
<testsuites name="jest tests" tests="316" failures="1" errors="0" time="22.441">
  <testsuite name="RDS Stack" errors="0" failures="0" skipped="14" timestamp="2025-09-19T04:23:57" time="14.703" tests="14">
    <testcase classname="RDS Stack" name="should create RDS PostgreSQL instance with correct configuration" time="0">
      <skipped/>
    </testcase>
    <testcase classname="RDS Stack" name="should create production RDS instance with Multi-AZ and enhanced configuration" time="0">
      <skipped/>
    </testcase>
    <testcase classname="RDS Stack" name="should create KMS key for database encryption" time="0">
      <skipped/>
    </testcase>
    <testcase classname="RDS Stack" name="should create database credentials secret" time="0">
      <skipped/>
    </testcase>
    <testcase classname="RDS Stack" name="should create parameter group with optimized PostgreSQL settings" time="0">
      <skipped/>
    </testcase>
    <testcase classname="RDS Stack" name="should create production parameter group with enhanced settings" time="0">
      <skipped/>
    </testcase>
    <testcase classname="RDS Stack" name="should create database subnet group in isolated subnets" time="0">
      <skipped/>
    </testcase>
    <testcase classname="RDS Stack" name="should create CloudWatch alarms for database monitoring" time="0">
      <skipped/>
    </testcase>
    <testcase classname="RDS Stack" name="should create SNS topic for database alerts" time="0">
      <skipped/>
    </testcase>
    <testcase classname="RDS Stack" name="should create Parameter Store parameters for database connection" time="0">
      <skipped/>
    </testcase>
    <testcase classname="RDS Stack" name="should create CloudWatch log groups for database logs" time="0">
      <skipped/>
    </testcase>
    <testcase classname="RDS Stack" name="should create proper stack outputs" time="0">
      <skipped/>
    </testcase>
    <testcase classname="RDS Stack" name="should apply proper tags to all resources" time="0">
      <skipped/>
    </testcase>
    <testcase classname="RDS Stack" name="should have different removal policies for production vs non-production" time="0">
      <skipped/>
    </testcase>
  </testsuite>
  <testsuite name="ObservabilityStack" errors="0" failures="0" skipped="41" timestamp="2025-09-19T04:23:57" time="14.743" tests="41">
    <testcase classname="ObservabilityStack › SNS Topics" name="should create three SNS topics for different alert levels" time="0">
      <skipped/>
    </testcase>
    <testcase classname="ObservabilityStack › SNS Topics" name="should encrypt SNS topics with KMS" time="0">
      <skipped/>
    </testcase>
    <testcase classname="ObservabilityStack › S3 Buckets" name="should create log archive bucket with proper configuration" time="0">
      <skipped/>
    </testcase>
    <testcase classname="ObservabilityStack › S3 Buckets" name="should create data lake bucket with proper configuration" time="0">
      <skipped/>
    </testcase>
    <testcase classname="ObservabilityStack › S3 Buckets" name="should configure lifecycle rules for cost optimization" time="0">
      <skipped/>
    </testcase>
    <testcase classname="ObservabilityStack › CloudWatch Log Groups" name="should create application log groups" time="0">
      <skipped/>
    </testcase>
    <testcase classname="ObservabilityStack › CloudWatch Log Groups" name="should create infrastructure log groups" time="0">
      <skipped/>
    </testcase>
    <testcase classname="ObservabilityStack › CloudWatch Log Groups" name="should create observability log groups" time="0">
      <skipped/>
    </testcase>
    <testcase classname="ObservabilityStack › CloudWatch Log Groups" name="should encrypt log groups with KMS" time="0">
      <skipped/>
    </testcase>
    <testcase classname="ObservabilityStack › KMS Key" name="should create KMS key for observability encryption" time="0">
      <skipped/>
    </testcase>
    <testcase classname="ObservabilityStack › KMS Key" name="should create KMS alias for observability key" time="0">
      <skipped/>
    </testcase>
    <testcase classname="ObservabilityStack › KMS Key" name="should have proper key policy for observability services" time="0">
      <skipped/>
    </testcase>
    <testcase classname="ObservabilityStack › IAM Role" name="should create observability IAM role" time="0">
      <skipped/>
    </testcase>
    <testcase classname="ObservabilityStack › IAM Role" name="should have proper managed policies attached" time="0">
      <skipped/>
    </testcase>
    <testcase classname="ObservabilityStack › IAM Role" name="should have inline policy for observability permissions" time="0">
      <skipped/>
    </testcase>
    <testcase classname="ObservabilityStack › X-Ray Configuration" name="should store X-Ray tracing configuration in Parameter Store" time="0">
      <skipped/>
    </testcase>
    <testcase classname="ObservabilityStack › X-Ray Configuration" name="should enable X-Ray tracing" time="0">
      <skipped/>
    </testcase>
    <testcase classname="ObservabilityStack › EventBridge Rules" name="should create infrastructure health event rule" time="0">
      <skipped/>
    </testcase>
    <testcase classname="ObservabilityStack › EventBridge Rules" name="should create security events rule" time="0">
      <skipped/>
    </testcase>
    <testcase classname="ObservabilityStack › EventBridge Rules" name="should create CloudWatch alarm state changes rule" time="0">
      <skipped/>
    </testcase>
    <testcase classname="ObservabilityStack › EventBridge Rules" name="should have SNS targets for event rules" time="0">
      <skipped/>
    </testcase>
    <testcase classname="ObservabilityStack › CloudWatch Alarms" name="should create high CPU utilization alarm" time="0">
      <skipped/>
    </testcase>
    <testcase classname="ObservabilityStack › CloudWatch Alarms" name="should create high memory utilization alarm" time="0">
      <skipped/>
    </testcase>
    <testcase classname="ObservabilityStack › CloudWatch Alarms" name="should create low disk space alarm" time="0">
      <skipped/>
    </testcase>
    <testcase classname="ObservabilityStack › CloudWatch Alarms" name="should create high error rate alarm" time="0">
      <skipped/>
    </testcase>
    <testcase classname="ObservabilityStack › CloudWatch Alarms" name="should create high response time alarm" time="0">
      <skipped/>
    </testcase>
    <testcase classname="ObservabilityStack › CloudWatch Alarms" name="should create database connection failures alarm" time="0">
      <skipped/>
    </testcase>
    <testcase classname="ObservabilityStack › CloudWatch Alarms" name="should have SNS actions for alarms" time="0">
      <skipped/>
    </testcase>
    <testcase classname="ObservabilityStack › Parameter Store Configuration" name="should store log groups configuration" time="0">
      <skipped/>
    </testcase>
    <testcase classname="ObservabilityStack › Parameter Store Configuration" name="should store SNS topics configuration" time="0">
      <skipped/>
    </testcase>
    <testcase classname="ObservabilityStack › Parameter Store Configuration" name="should store S3 buckets configuration" time="0">
      <skipped/>
    </testcase>
    <testcase classname="ObservabilityStack › Parameter Store Configuration" name="should store X-Ray configuration" time="0">
      <skipped/>
    </testcase>
    <testcase classname="ObservabilityStack › Stack Outputs" name="should create outputs for SNS topic ARNs" time="0">
      <skipped/>
    </testcase>
    <testcase classname="ObservabilityStack › Stack Outputs" name="should create outputs for S3 bucket names" time="0">
      <skipped/>
    </testcase>
    <testcase classname="ObservabilityStack › Stack Outputs" name="should create output for observability role ARN" time="0">
      <skipped/>
    </testcase>
    <testcase classname="ObservabilityStack › Stack Outputs" name="should create observability stack summary output" time="0">
      <skipped/>
    </testcase>
    <testcase classname="ObservabilityStack › Resource Tagging" name="should tag all resources with common tags" time="0">
      <skipped/>
    </testcase>
    <testcase classname="ObservabilityStack › Resource Tagging" name="should tag resources with specific purpose tags" time="0">
      <skipped/>
    </testcase>
    <testcase classname="ObservabilityStack › Cross-Region Replication" name="should configure cross-region replication when enabled" time="0">
      <skipped/>
    </testcase>
    <testcase classname="ObservabilityStack › Environment-Specific Configuration" name="should use production retention policies for production environment" time="0">
      <skipped/>
    </testcase>
    <testcase classname="ObservabilityStack › Environment-Specific Configuration" name="should use development retention policies for development environment" time="0">
      <skipped/>
    </testcase>
  </testsuite>
  <testsuite name="DisasterRecoveryAutomation" errors="0" failures="0" skipped="13" timestamp="2025-09-19T04:23:57" time="14.846" tests="13">
    <testcase classname="DisasterRecoveryAutomation › Basic Construction" name="should create DR automation construct with minimal configuration" time="0">
      <skipped/>
    </testcase>
    <testcase classname="DisasterRecoveryAutomation › Basic Construction" name="should create DR automation construct with full configuration" time="0">
      <skipped/>
    </testcase>
    <testcase classname="DisasterRecoveryAutomation › Lambda Functions" name="should create failover Lambda with correct configuration" time="0">
      <skipped/>
    </testcase>
    <testcase classname="DisasterRecoveryAutomation › Lambda Functions" name="should create chaos testing Lambda with correct configuration" time="0">
      <skipped/>
    </testcase>
    <testcase classname="DisasterRecoveryAutomation › Step Functions State Machines" name="should create failover state machine" time="0">
      <skipped/>
    </testcase>
    <testcase classname="DisasterRecoveryAutomation › Step Functions State Machines" name="should create chaos testing state machine" time="0">
      <skipped/>
    </testcase>
    <testcase classname="DisasterRecoveryAutomation › EventBridge Rules" name="should create monthly testing rule" time="0">
      <skipped/>
    </testcase>
    <testcase classname="DisasterRecoveryAutomation › CloudWatch Dashboard" name="should create DR monitoring dashboard" time="0">
      <skipped/>
    </testcase>
    <testcase classname="DisasterRecoveryAutomation › IAM Roles and Policies" name="should create DR automation role with correct permissions" time="0">
      <skipped/>
    </testcase>
    <testcase classname="DisasterRecoveryAutomation › Systems Manager Parameters" name="should create DR automation configuration parameter" time="0">
      <skipped/>
    </testcase>
    <testcase classname="DisasterRecoveryAutomation › Health Check Monitoring" name="should create health check monitoring when health checks are provided" time="0">
      <skipped/>
    </testcase>
    <testcase classname="DisasterRecoveryAutomation › Outputs" name="should create all required outputs" time="0">
      <skipped/>
    </testcase>
    <testcase classname="DisasterRecoveryAutomation › Integration Tests" name="should integrate properly with existing infrastructure" time="0">
      <skipped/>
    </testcase>
  </testsuite>
  <testsuite name="Cross-Stack Dependencies Integration Tests" errors="0" failures="0" skipped="14" timestamp="2025-09-19T04:23:57" time="15.559" tests="14">
    <testcase classname="Cross-Stack Dependencies Integration Tests › Multi-Stack Architecture Integration" name="should create all stacks with proper dependencies" time="0">
      <skipped/>
    </testcase>
    <testcase classname="Cross-Stack Dependencies Integration Tests › Multi-Stack Architecture Integration" name="should share VPC resources across stacks" time="0">
      <skipped/>
    </testcase>
    <testcase classname="Cross-Stack Dependencies Integration Tests › Multi-Stack Architecture Integration" name="should share certificate resources across stacks" time="0">
      <skipped/>
    </testcase>
    <testcase classname="Cross-Stack Dependencies Integration Tests › Multi-Stack Architecture Integration" name="should create load balancer with proper certificate integration" time="0">
      <skipped/>
    </testcase>
    <testcase classname="Cross-Stack Dependencies Integration Tests › Cross-Stack Resource References" name="should properly reference VPC from other stacks" time="0">
      <skipped/>
    </testcase>
    <testcase classname="Cross-Stack Dependencies Integration Tests › Cross-Stack Resource References" name="should create proper CloudFormation exports and imports" time="0">
      <skipped/>
    </testcase>
    <testcase classname="Cross-Stack Dependencies Integration Tests › Stack Naming and Tagging Consistency" name="should use consistent naming across all stacks" time="0">
      <skipped/>
    </testcase>
    <testcase classname="Cross-Stack Dependencies Integration Tests › Stack Naming and Tagging Consistency" name="should apply consistent tags across all stacks" time="0">
      <skipped/>
    </testcase>
    <testcase classname="Cross-Stack Dependencies Integration Tests › Environment-Specific Cross-Stack Integration" name="should handle production environment with all stacks" time="0">
      <skipped/>
    </testcase>
    <testcase classname="Cross-Stack Dependencies Integration Tests › Environment-Specific Cross-Stack Integration" name="should handle development environment with cost optimizations" time="0">
      <skipped/>
    </testcase>
    <testcase classname="Cross-Stack Dependencies Integration Tests › Stack Synthesis and Deployment Order" name="should synthesize all stacks without errors" time="0">
      <skipped/>
    </testcase>
    <testcase classname="Cross-Stack Dependencies Integration Tests › Stack Synthesis and Deployment Order" name="should have correct deployment dependencies" time="0">
      <skipped/>
    </testcase>
    <testcase classname="Cross-Stack Dependencies Integration Tests › Resource Sharing Validation" name="should validate that shared resources are accessible" time="0">
      <skipped/>
    </testcase>
    <testcase classname="Cross-Stack Dependencies Integration Tests › Resource Sharing Validation" name="should validate cross-stack parameter passing" time="0">
      <skipped/>
    </testcase>
  </testsuite>
  <testsuite name="Comprehensive Infrastructure Validation" errors="0" failures="0" skipped="34" timestamp="2025-09-19T04:23:57" time="15.588" tests="34">
    <testcase classname="Comprehensive Infrastructure Validation › Infrastructure Synthesis and Performance" name="should synthesize without errors" time="0">
      <skipped/>
    </testcase>
    <testcase classname="Comprehensive Infrastructure Validation › Infrastructure Synthesis and Performance" name="should meet performance benchmarks" time="0">
      <skipped/>
    </testcase>
    <testcase classname="Comprehensive Infrastructure Validation › Infrastructure Synthesis and Performance" name="should have reasonable template complexity" time="0">
      <skipped/>
    </testcase>
    <testcase classname="Comprehensive Infrastructure Validation › Security and Compliance Validation" name="should pass comprehensive security validation" time="0">
      <skipped/>
    </testcase>
    <testcase classname="Comprehensive Infrastructure Validation › Security and Compliance Validation" name="should have proper resource tagging" time="0">
      <skipped/>
    </testcase>
    <testcase classname="Comprehensive Infrastructure Validation › Security and Compliance Validation" name="should follow security group best practices" time="0">
      <skipped/>
    </testcase>
    <testcase classname="Comprehensive Infrastructure Validation › Security and Compliance Validation" name="should have proper encryption configuration" time="0">
      <skipped/>
    </testcase>
    <testcase classname="Comprehensive Infrastructure Validation › Security and Compliance Validation" name="should validate IAM policies for least privilege" time="0">
      <skipped/>
    </testcase>
    <testcase classname="Comprehensive Infrastructure Validation › Resource Count and Configuration Validation" name="should have expected VPC resources" time="0">
      <skipped/>
    </testcase>
    <testcase classname="Comprehensive Infrastructure Validation › Resource Count and Configuration Validation" name="should have proper security group configuration" time="0">
      <skipped/>
    </testcase>
    <testcase classname="Comprehensive Infrastructure Validation › Resource Count and Configuration Validation" name="should have observability resources when observability stack exists" time="0">
      <skipped/>
    </testcase>
    <testcase classname="Comprehensive Infrastructure Validation › Resource Count and Configuration Validation" name="should have KMS keys for encryption" time="0">
      <skipped/>
    </testcase>
    <testcase classname="Comprehensive Infrastructure Validation › Cross-Stack Integration Validation" name="should have proper stack dependencies" time="0">
      <skipped/>
    </testcase>
    <testcase classname="Comprehensive Infrastructure Validation › Cross-Stack Integration Validation" name="should have proper cross-stack exports" time="0">
      <skipped/>
    </testcase>
    <testcase classname="Comprehensive Infrastructure Validation › Cross-Stack Integration Validation" name="should have consistent naming across stacks" time="0">
      <skipped/>
    </testcase>
    <testcase classname="Comprehensive Infrastructure Validation › Environment-Specific Configuration Validation" name="should handle development environment correctly" time="0">
      <skipped/>
    </testcase>
    <testcase classname="Comprehensive Infrastructure Validation › Environment-Specific Configuration Validation" name="should handle production environment correctly" time="0">
      <skipped/>
    </testcase>
    <testcase classname="Comprehensive Infrastructure Validation › Environment-Specific Configuration Validation" name="should validate environment-specific retention policies" time="0">
      <skipped/>
    </testcase>
    <testcase classname="Comprehensive Infrastructure Validation › Cost Optimization Validation" name="should use cost-effective resource configurations for test environment" time="0">
      <skipped/>
    </testcase>
    <testcase classname="Comprehensive Infrastructure Validation › Cost Optimization Validation" name="should have proper S3 lifecycle configurations" time="0">
      <skipped/>
    </testcase>
    <testcase classname="Comprehensive Infrastructure Validation › Cost Optimization Validation" name="should have appropriate log retention policies" time="0">
      <skipped/>
    </testcase>
    <testcase classname="Comprehensive Infrastructure Validation › Disaster Recovery and Reliability Validation" name="should have multi-AZ configuration where appropriate" time="0">
      <skipped/>
    </testcase>
    <testcase classname="Comprehensive Infrastructure Validation › Disaster Recovery and Reliability Validation" name="should have proper backup and versioning configuration" time="0">
      <skipped/>
    </testcase>
    <testcase classname="Comprehensive Infrastructure Validation › Disaster Recovery and Reliability Validation" name="should have monitoring and alerting configured" time="0">
      <skipped/>
    </testcase>
    <testcase classname="Comprehensive Infrastructure Validation › Template Comparison and Drift Detection" name="should detect template changes between environments" time="0">
      <skipped/>
    </testcase>
    <testcase classname="Comprehensive Infrastructure Validation › Template Comparison and Drift Detection" name="should maintain template consistency for same environment" time="0">
      <skipped/>
    </testcase>
    <testcase classname="Comprehensive Infrastructure Validation › Comprehensive Validation Report" name="should generate comprehensive validation report" time="0">
      <skipped/>
    </testcase>
    <testcase classname="Comprehensive Infrastructure Validation › Comprehensive Validation Report" name="should validate all required infrastructure components" time="0">
      <skipped/>
    </testcase>
    <testcase classname="Comprehensive Infrastructure Validation › Comprehensive Validation Report" name="should validate infrastructure drift detection capabilities" time="0">
      <skipped/>
    </testcase>
    <testcase classname="Comprehensive Infrastructure Validation › Comprehensive Validation Report" name="should validate cost estimation integration" time="0">
      <skipped/>
    </testcase>
    <testcase classname="Comprehensive Infrastructure Validation › Comprehensive Validation Report" name="should validate budget alert configuration" time="0">
      <skipped/>
    </testcase>
    <testcase classname="Comprehensive Infrastructure Validation › CI/CD Pipeline Integration Validation" name="should validate CDK synthesis for CI/CD pipeline" time="0">
      <skipped/>
    </testcase>
    <testcase classname="Comprehensive Infrastructure Validation › CI/CD Pipeline Integration Validation" name="should validate automated security scanning integration" time="0">
      <skipped/>
    </testcase>
    <testcase classname="Comprehensive Infrastructure Validation › CI/CD Pipeline Integration Validation" name="should validate infrastructure documentation generation" time="0">
      <skipped/>
    </testcase>
  </testsuite>
  <testsuite name="AnalyticsStack" errors="0" failures="0" skipped="6" timestamp="2025-09-19T04:24:11" time="1.88" tests="6">
    <testcase classname="AnalyticsStack" name="should create analytics stack with all required resources" time="0">
      <skipped/>
    </testcase>
    <testcase classname="AnalyticsStack" name="should create proper IAM roles and policies" time="0">
      <skipped/>
    </testcase>
    <testcase classname="AnalyticsStack" name="should create CloudWatch alarms for monitoring" time="0">
      <skipped/>
    </testcase>
    <testcase classname="AnalyticsStack" name="should create proper outputs for cross-stack references" time="0">
      <skipped/>
    </testcase>
    <testcase classname="AnalyticsStack" name="should apply proper tags to all resources" time="0">
      <skipped/>
    </testcase>
    <testcase classname="AnalyticsStack" name="should configure lifecycle policies for cost optimization" time="0">
      <skipped/>
    </testcase>
  </testsuite>
  <testsuite name="MSKStack" errors="0" failures="0" skipped="12" timestamp="2025-09-19T04:24:11" time="1.86" tests="12">
    <testcase classname="MSKStack" name="should create MSK cluster with correct configuration" time="0">
      <skipped/>
    </testcase>
    <testcase classname="MSKStack" name="should create MSK configuration with domain events optimization" time="0">
      <skipped/>
    </testcase>
    <testcase classname="MSKStack" name="should enable encryption at rest and in transit" time="0">
      <skipped/>
    </testcase>
    <testcase classname="MSKStack" name="should enable IAM authentication" time="0">
      <skipped/>
    </testcase>
    <testcase classname="MSKStack" name="should create MSK cluster policy for secure access" time="0">
      <skipped/>
    </testcase>
    <testcase classname="MSKStack" name="should create MSK Connect role with appropriate permissions" time="0">
      <skipped/>
    </testcase>
    <testcase classname="MSKStack" name="should enable comprehensive monitoring" time="0">
      <skipped/>
    </testcase>
    <testcase classname="MSKStack" name="should create CloudWatch alarms for MSK monitoring" time="0">
      <skipped/>
    </testcase>
    <testcase classname="MSKStack" name="should create appropriate outputs for integration" time="0">
      <skipped/>
    </testcase>
    <testcase classname="MSKStack" name="should configure logging to CloudWatch" time="0">
      <skipped/>
    </testcase>
    <testcase classname="MSKStack" name="should use private subnets for security" time="0">
      <skipped/>
    </testcase>
    <testcase classname="MSKStack" name="should apply proper tags to all resources" time="0">
      <skipped/>
    </testcase>
  </testsuite>
  <testsuite name="Infrastructure Drift Detection Snapshots" errors="0" failures="0" skipped="18" timestamp="2025-09-19T04:24:11" time="2.024" tests="18">
    <testcase classname="Infrastructure Drift Detection Snapshots › Complete Infrastructure Snapshots" name="should match main infrastructure stack snapshot" time="0">
      <skipped/>
    </testcase>
    <testcase classname="Infrastructure Drift Detection Snapshots › Complete Infrastructure Snapshots" name="should match network stack snapshot" time="0">
      <skipped/>
    </testcase>
    <testcase classname="Infrastructure Drift Detection Snapshots › Complete Infrastructure Snapshots" name="should match certificate stack snapshot" time="0">
      <skipped/>
    </testcase>
    <testcase classname="Infrastructure Drift Detection Snapshots › Complete Infrastructure Snapshots" name="should match observability stack snapshot" time="0">
      <skipped/>
    </testcase>
    <testcase classname="Infrastructure Drift Detection Snapshots › Environment-Specific Snapshots" name="should match development environment snapshot" time="0">
      <skipped/>
    </testcase>
    <testcase classname="Infrastructure Drift Detection Snapshots › Environment-Specific Snapshots" name="should match production environment snapshot" time="0">
      <skipped/>
    </testcase>
    <testcase classname="Infrastructure Drift Detection Snapshots › Environment-Specific Snapshots" name="should match test environment snapshot" time="0">
      <skipped/>
    </testcase>
    <testcase classname="Infrastructure Drift Detection Snapshots › Component-Specific Snapshots" name="should match VPC configuration snapshot" time="0">
      <skipped/>
    </testcase>
    <testcase classname="Infrastructure Drift Detection Snapshots › Component-Specific Snapshots" name="should match security groups snapshot" time="0">
      <skipped/>
    </testcase>
    <testcase classname="Infrastructure Drift Detection Snapshots › Component-Specific Snapshots" name="should match observability components snapshot" time="0">
      <skipped/>
    </testcase>
    <testcase classname="Infrastructure Drift Detection Snapshots › Cross-Stack Dependencies Snapshots" name="should match cross-stack exports snapshot" time="0">
      <skipped/>
    </testcase>
    <testcase classname="Infrastructure Drift Detection Snapshots › Cross-Stack Dependencies Snapshots" name="should match stack dependencies snapshot" time="0">
      <skipped/>
    </testcase>
    <testcase classname="Infrastructure Drift Detection Snapshots › Resource Tagging Snapshots" name="should match resource tagging patterns snapshot" time="0">
      <skipped/>
    </testcase>
    <testcase classname="Infrastructure Drift Detection Snapshots › Configuration Drift Detection" name="should detect changes in CDK context configuration" time="0">
      <skipped/>
    </testcase>
    <testcase classname="Infrastructure Drift Detection Snapshots › Configuration Drift Detection" name="should detect changes in stack properties" time="0">
      <skipped/>
    </testcase>
    <testcase classname="Infrastructure Drift Detection Snapshots › Configuration Drift Detection" name="should detect changes in environment-specific configurations" time="0">
      <skipped/>
    </testcase>
    <testcase classname="Infrastructure Drift Detection Snapshots › Metadata and Annotations Snapshots" name="should match CDK metadata snapshot" time="0">
      <skipped/>
    </testcase>
    <testcase classname="Infrastructure Drift Detection Snapshots › Metadata and Annotations Snapshots" name="should match stack annotations snapshot" time="0">
      <skipped/>
    </testcase>
  </testsuite>
  <testsuite name="Enhanced Configuration Management" errors="0" failures="0" skipped="8" timestamp="2025-09-19T04:24:12" time="1.597" tests="8">
    <testcase classname="Enhanced Configuration Management" name="should create VPC with environment-specific configuration" time="0">
      <skipped/>
    </testcase>
    <testcase classname="Enhanced Configuration Management" name="should create security groups with standardized naming" time="0">
      <skipped/>
    </testcase>
    <testcase classname="Enhanced Configuration Management" name="should create VPC Flow Logs with proper retention" time="0">
      <skipped/>
    </testcase>
    <testcase classname="Enhanced Configuration Management" name="should create Parameter Store parameters" time="0">
      <skipped/>
    </testcase>
    <testcase classname="Enhanced Configuration Management" name="should apply standardized tags to all resources" time="0">
      <skipped/>
    </testcase>
    <testcase classname="Enhanced Configuration Management" name="should create cost monitoring alarms" time="0">
      <skipped/>
    </testcase>
    <testcase classname="Enhanced Configuration Management" name="should create proper outputs with standardized naming" time="0">
      <skipped/>
    </testcase>
    <testcase classname="Enhanced Configuration Management" name="should handle production environment configuration differently" time="0">
      <skipped/>
    </testcase>
  </testsuite>
  <testsuite name="NetworkStack Unit Tests" errors="0" failures="0" skipped="22" timestamp="2025-09-19T04:24:12" time="1.656" tests="22">
    <testcase classname="NetworkStack Unit Tests › VPC Configuration" name="should create VPC with correct CIDR and configuration" time="0">
      <skipped/>
    </testcase>
    <testcase classname="NetworkStack Unit Tests › VPC Configuration" name="should enable VPC Flow Logs when configured" time="0">
      <skipped/>
    </testcase>
    <testcase classname="NetworkStack Unit Tests › VPC Configuration" name="should create correct number of subnets across AZs" time="0">
      <skipped/>
    </testcase>
    <testcase classname="NetworkStack Unit Tests › Security Groups" name="should create EKS security group with proper rules" time="0">
      <skipped/>
    </testcase>
    <testcase classname="NetworkStack Unit Tests › Security Groups" name="should create RDS security group with database port access" time="0">
      <skipped/>
    </testcase>
    <testcase classname="NetworkStack Unit Tests › Security Groups" name="should create MSK security group with Kafka ports" time="0">
      <skipped/>
    </testcase>
    <testcase classname="NetworkStack Unit Tests › Security Groups" name="should create ALB security group with HTTP/HTTPS access" time="0">
      <skipped/>
    </testcase>
    <testcase classname="NetworkStack Unit Tests › NAT Gateways" name="should create correct number of NAT gateways based on environment" time="0">
      <skipped/>
    </testcase>
    <testcase classname="NetworkStack Unit Tests › NAT Gateways" name="should create Elastic IPs for NAT gateways" time="0">
      <skipped/>
    </testcase>
    <testcase classname="NetworkStack Unit Tests › Internet Gateway" name="should create and attach Internet Gateway" time="0">
      <skipped/>
    </testcase>
    <testcase classname="NetworkStack Unit Tests › Route Tables" name="should create public route tables with internet gateway routes" time="0">
      <skipped/>
    </testcase>
    <testcase classname="NetworkStack Unit Tests › Route Tables" name="should create private route tables with NAT gateway routes" time="0">
      <skipped/>
    </testcase>
    <testcase classname="NetworkStack Unit Tests › Resource Tagging" name="should tag all resources with standard tags" time="0">
      <skipped/>
    </testcase>
    <testcase classname="NetworkStack Unit Tests › Resource Tagging" name="should tag security groups with component-specific tags" time="0">
      <skipped/>
    </testcase>
    <testcase classname="NetworkStack Unit Tests › Stack Outputs" name="should export VPC ID and CIDR" time="0">
      <skipped/>
    </testcase>
    <testcase classname="NetworkStack Unit Tests › Stack Outputs" name="should export security group IDs" time="0">
      <skipped/>
    </testcase>
    <testcase classname="NetworkStack Unit Tests › Stack Outputs" name="should export subnet IDs" time="0">
      <skipped/>
    </testcase>
    <testcase classname="NetworkStack Unit Tests › Environment-Specific Configuration" name="should use production configuration for production environment" time="0">
      <skipped/>
    </testcase>
    <testcase classname="NetworkStack Unit Tests › Environment-Specific Configuration" name="should use development configuration for development environment" time="0">
      <skipped/>
    </testcase>
    <testcase classname="NetworkStack Unit Tests › Network ACLs" name="should create network ACLs for additional security" time="0">
      <skipped/>
    </testcase>
    <testcase classname="NetworkStack Unit Tests › Network ACLs" name="should have proper network ACL rules" time="0">
      <skipped/>
    </testcase>
    <testcase classname="NetworkStack Unit Tests › VPC Endpoints" name="should create VPC endpoints for AWS services" time="0">
      <skipped/>
    </testcase>
  </testsuite>
  <testsuite name="CostOptimizationStack" errors="0" failures="0" skipped="16" timestamp="2025-09-19T04:24:13" time="1.504" tests="16">
    <testcase classname="CostOptimizationStack › SNS Topics" name="should create billing alarm topic" time="0">
      <skipped/>
    </testcase>
    <testcase classname="CostOptimizationStack › SNS Topics" name="should create cost optimization topic" time="0">
      <skipped/>
    </testcase>
    <testcase classname="CostOptimizationStack › SNS Topics" name="should create email subscriptions" time="0">
      <skipped/>
    </testcase>
    <testcase classname="CostOptimizationStack › CloudWatch Alarms" name="should create billing alarms for different cost thresholds" time="0">
      <skipped/>
    </testcase>
    <testcase classname="CostOptimizationStack › CloudWatch Alarms" name="should create service-specific cost alarms" time="0">
      <skipped/>
    </testcase>
    <testcase classname="CostOptimizationStack › CloudWatch Alarms" name="should configure alarm actions to SNS topics" time="0">
      <skipped/>
    </testcase>
    <testcase classname="CostOptimizationStack › AWS Budgets" name="should create monthly budget" time="0">
      <skipped/>
    </testcase>
    <testcase classname="CostOptimizationStack › AWS Budgets" name="should configure budget notifications" time="0">
      <skipped/>
    </testcase>
    <testcase classname="CostOptimizationStack › CloudWatch Dashboard" name="should create cost optimization dashboard" time="0">
      <skipped/>
    </testcase>
    <testcase classname="CostOptimizationStack › CloudWatch Dashboard" name="should include billing metrics in dashboard" time="0">
      <skipped/>
    </testcase>
    <testcase classname="CostOptimizationStack › Stack Outputs" name="should output billing alarm topic ARN" time="0">
      <skipped/>
    </testcase>
    <testcase classname="CostOptimizationStack › Stack Outputs" name="should output cost optimization topic ARN" time="0">
      <skipped/>
    </testcase>
    <testcase classname="CostOptimizationStack › Production Environment" name="should have higher cost thresholds for production" time="0">
      <skipped/>
    </testcase>
    <testcase classname="CostOptimizationStack › Production Environment" name="should create daily budget for production" time="0">
      <skipped/>
    </testcase>
    <testcase classname="CostOptimizationStack › Resource Tagging" name="should apply cost allocation tags" time="0">
      <skipped/>
    </testcase>
    <testcase classname="CostOptimizationStack › Error Handling" name="should handle missing optional parameters gracefully" time="0">
      <skipped/>
    </testcase>
  </testsuite>
  <testsuite name="RDS Integration Tests" errors="0" failures="0" skipped="7" timestamp="2025-09-19T04:24:13" time="1.676" tests="7">
    <testcase classname="RDS Integration Tests" name="should integrate RDS stack with main infrastructure stack" time="0">
      <skipped/>
    </testcase>
    <testcase classname="RDS Integration Tests" name="should create RDS database with correct VPC integration" time="0">
      <skipped/>
    </testcase>
    <testcase classname="RDS Integration Tests" name="should create proper security group integration" time="0">
      <skipped/>
    </testcase>
    <testcase classname="RDS Integration Tests" name="should create monitoring and alerting for RDS" time="0">
      <skipped/>
    </testcase>
    <testcase classname="RDS Integration Tests" name="should create Parameter Store integration" time="0">
      <skipped/>
    </testcase>
    <testcase classname="RDS Integration Tests" name="should create proper stack outputs for cross-stack references" time="0">
      <skipped/>
    </testcase>
    <testcase classname="RDS Integration Tests" name="should handle production environment with enhanced configuration" time="0">
      <skipped/>
    </testcase>
  </testsuite>
  <testsuite name="Core Infrastructure Stack" errors="0" failures="0" skipped="11" timestamp="2025-09-19T04:24:14" time="1.686" tests="11">
    <testcase classname="Core Infrastructure Stack › Without Domain" name="Application Load Balancer is created" time="0">
      <skipped/>
    </testcase>
    <testcase classname="Core Infrastructure Stack › Without Domain" name="Default target group is created with health checks" time="0">
      <skipped/>
    </testcase>
    <testcase classname="Core Infrastructure Stack › Without Domain" name="HTTP listener is created without domain" time="0">
      <skipped/>
    </testcase>
    <testcase classname="Core Infrastructure Stack › Without Domain" name="Load balancer outputs are created" time="0">
      <skipped/>
    </testcase>
    <testcase classname="Core Infrastructure Stack › Without Domain" name="Environment and project outputs are created" time="0">
      <skipped/>
    </testcase>
    <testcase classname="Core Infrastructure Stack › With Domain and Certificates" name="HTTPS listener is created with certificates" time="0">
      <skipped/>
    </testcase>
    <testcase classname="Core Infrastructure Stack › With Domain and Certificates" name="HTTP listener redirects to HTTPS" time="0">
      <skipped/>
    </testcase>
    <testcase classname="Core Infrastructure Stack › With Domain and Certificates" name="DNS A records are created pointing to ALB" time="0">
      <skipped/>
    </testcase>
    <testcase classname="Core Infrastructure Stack › With Domain and Certificates" name="DNS A record target output is created" time="0">
      <skipped/>
    </testcase>
    <testcase classname="Core Infrastructure Stack › With Domain and Certificates" name="Kubernetes Ingress annotations are provided" time="0">
      <skipped/>
    </testcase>
    <testcase classname="Core Infrastructure Stack › With Domain and Certificates" name="Common tags are applied to load balancer" time="0">
      <skipped/>
    </testcase>
  </testsuite>
  <testsuite name="Route53FailoverStack" errors="0" failures="0" skipped="13" timestamp="2025-09-19T04:24:14" time="1.701" tests="13">
    <testcase classname="Route53FailoverStack › when both primary and secondary regions are configured" name="should create health checks for both regions" time="0">
      <skipped/>
    </testcase>
    <testcase classname="Route53FailoverStack › when both primary and secondary regions are configured" name="should create failover DNS records" time="0">
      <skipped/>
    </testcase>
    <testcase classname="Route53FailoverStack › when both primary and secondary regions are configured" name="should create latency-based routing records" time="0">
      <skipped/>
    </testcase>
    <testcase classname="Route53FailoverStack › when both primary and secondary regions are configured" name="should create CloudWatch dashboard for failover monitoring" time="0">
      <skipped/>
    </testcase>
    <testcase classname="Route53FailoverStack › when both primary and secondary regions are configured" name="should create CloudWatch alarms for health check failures" time="0">
      <skipped/>
    </testcase>
    <testcase classname="Route53FailoverStack › when both primary and secondary regions are configured" name="should create SNS topic for failover alerts" time="0">
      <skipped/>
    </testcase>
    <testcase classname="Route53FailoverStack › when both primary and secondary regions are configured" name="should have proper tags applied to health checks" time="0">
      <skipped/>
    </testcase>
    <testcase classname="Route53FailoverStack › when both primary and secondary regions are configured" name="should create outputs for DNS names and configuration" time="0">
      <skipped/>
    </testcase>
    <testcase classname="Route53FailoverStack › when both primary and secondary regions are configured" name="should configure short TTL for faster failover" time="0">
      <skipped/>
    </testcase>
    <testcase classname="Route53FailoverStack › when only primary region is configured" name="should create only primary health check" time="0">
      <skipped/>
    </testcase>
    <testcase classname="Route53FailoverStack › when only primary region is configured" name="should create only primary failover record" time="0">
      <skipped/>
    </testcase>
    <testcase classname="Route53FailoverStack › when only primary region is configured" name="should create only one CloudWatch alarm" time="0">
      <skipped/>
    </testcase>
    <testcase classname="Route53FailoverStack › when only primary region is configured" name="should create outputs for primary region only" time="0">
      <skipped/>
    </testcase>
  </testsuite>
  <testsuite name="CDK Compliance Tests" errors="0" failures="1" skipped="14" timestamp="2025-09-19T04:24:13" time="2.512" tests="15">
    <testcase classname="CDK Compliance Tests › Security Compliance Checks" name="should have proper VPC security configurations" time="0">
      <skipped/>
    </testcase>
    <testcase classname="CDK Compliance Tests › Security Compliance Checks" name="should have secure security group configurations" time="0">
      <skipped/>
    </testcase>
    <testcase classname="CDK Compliance Tests › Security Compliance Checks" name="should have proper encryption configurations" time="0">
      <skipped/>
    </testcase>
    <testcase classname="CDK Compliance Tests › Security Compliance Checks" name="should have proper IAM configurations" time="0">
      <skipped/>
    </testcase>
    <testcase classname="CDK Compliance Tests › Well-Architected Framework Compliance" name="should validate operational excellence pillar" time="0">
      <skipped/>
    </testcase>
    <testcase classname="CDK Compliance Tests › Well-Architected Framework Compliance" name="should validate security pillar compliance" time="0">
      <skipped/>
    </testcase>
    <testcase classname="CDK Compliance Tests › Well-Architected Framework Compliance" name="should validate reliability pillar compliance" time="0">
      <skipped/>
    </testcase>
    <testcase classname="CDK Compliance Tests › Well-Architected Framework Compliance" name="should validate performance efficiency pillar" time="0">
      <skipped/>
    </testcase>
    <testcase classname="CDK Compliance Tests › Well-Architected Framework Compliance" name="should validate cost optimization pillar" time="0">
      <skipped/>
    </testcase>
    <testcase classname="CDK Compliance Tests › Environment-Specific Compliance" name="should validate production environment compliance" time="0">
      <skipped/>
    </testcase>
    <testcase classname="CDK Compliance Tests › Environment-Specific Compliance" name="should validate development environment compliance" time="0">
      <skipped/>
    </testcase>
    <testcase classname="CDK Compliance Tests › Resource Tagging Compliance" name="should have consistent resource tagging" time="0.829">
      <failure>Expected value   undefined
Received:
  undefined

Message:
  Template has 1 resources with type AWS::EC2::VPC, but none match as expected.
The 1 closest matches:
GenAIDemoVPC6C0C1198 :: {
  &quot;Properties&quot;: {
    &quot;CidrBlock&quot;: &quot;10.1.0.0/16&quot;,
    &quot;EnableDnsHostnames&quot;: true,
    &quot;EnableDnsSupport&quot;: true,
    &quot;InstanceTenancy&quot;: &quot;default&quot;,
    &quot;Tags&quot;: [
      { ... },
      { ... },
      { ... },
      { ... },
      { ... },
      { ... },
      { ... },
      { ... },
      { ... },
!!     arrayWith pattern 0 matched here
      {
        &quot;Key&quot;: &quot;Project&quot;,
        &quot;Value&quot;: &quot;genai-demo&quot;
      },
!!     Could not match arrayWith pattern 1. This is the closest match
      {
!!       Expected Environment but received Region
        &quot;Key&quot;: &quot;Region&quot;,
        &quot;Value&quot;: &quot;ap-east-2&quot;
      },
      { ... },
      { ... }
    ]
  },
  &quot;Type&quot;: &quot;AWS::EC2::VPC&quot;
}

Difference:

Compared values have no visual difference.
    at Template.hasResourceProperties (/Users/yikaikao/git/genai-demo/infrastructure/node_modules/aws-cdk-lib/assertions/lib/template.js:1:3052)
    at Object.&lt;anonymous&gt; (/Users/yikaikao/git/genai-demo/infrastructure/test/compliance/cdk-nag-compliance.test.ts:190:22)
    at Promise.finally.completed (/Users/yikaikao/git/genai-demo/infrastructure/node_modules/jest-circus/build/jestAdapterInit.js:1556:28)
    at new Promise (&lt;anonymous&gt;)
    at callAsyncCircusFn (/Users/yikaikao/git/genai-demo/infrastructure/node_modules/jest-circus/build/jestAdapterInit.js:1496:10)
    at _callCircusTest (/Users/yikaikao/git/genai-demo/infrastructure/node_modules/jest-circus/build/jestAdapterInit.js:1006:40)
    at processTicksAndRejections (node:internal/process/task_queues:105:5)
    at _runTest (/Users/yikaikao/git/genai-demo/infrastructure/node_modules/jest-circus/build/jestAdapterInit.js:946:3)
    at _runTestsForDescribeBlock (/Users/yikaikao/git/genai-demo/infrastructure/node_modules/jest-circus/build/jestAdapterInit.js:839:13)
    at _runTestsForDescribeBlock (/Users/yikaikao/git/genai-demo/infrastructure/node_modules/jest-circus/build/jestAdapterInit.js:829:11)
    at _runTestsForDescribeBlock (/Users/yikaikao/git/genai-demo/infrastructure/node_modules/jest-circus/build/jestAdapterInit.js:829:11)
    at run (/Users/yikaikao/git/genai-demo/infrastructure/node_modules/jest-circus/build/jestAdapterInit.js:757:3)
    at runAndTransformResultsToJestFormat (/Users/yikaikao/git/genai-demo/infrastructure/node_modules/jest-circus/build/jestAdapterInit.js:1917:21)
    at jestAdapter (/Users/yikaikao/git/genai-demo/infrastructure/node_modules/jest-circus/build/runner.js:101:19)
    at runTestInternal (/Users/yikaikao/git/genai-demo/infrastructure/node_modules/jest-runner/build/testWorker.js:275:16)
    at runTest (/Users/yikaikao/git/genai-demo/infrastructure/node_modules/jest-runner/build/testWorker.js:343:7)
    at Object.worker (/Users/yikaikao/git/genai-demo/infrastructure/node_modules/jest-runner/build/testWorker.js:497:12)</failure>
    </testcase>
    <testcase classname="CDK Compliance Tests › Resource Tagging Compliance" name="should validate security group tagging" time="0">
      <skipped/>
    </testcase>
    <testcase classname="CDK Compliance Tests › Network Security Compliance" name="should validate security group rules" time="0">
      <skipped/>
    </testcase>
    <testcase classname="CDK Compliance Tests › Network Security Compliance" name="should validate database security" time="0">
      <skipped/>
    </testcase>
  </testsuite>
  <testsuite name="DisasterRecoveryStack" errors="0" failures="0" skipped="11" timestamp="2025-09-19T04:24:15" time="1.669" tests="11">
    <testcase classname="DisasterRecoveryStack › when DR is enabled for production environment" name="should create VPC with DR-specific CIDR" time="0">
      <skipped/>
    </testcase>
    <testcase classname="DisasterRecoveryStack › when DR is enabled for production environment" name="should create Application Load Balancer for DR" time="0">
      <skipped/>
    </testcase>
    <testcase classname="DisasterRecoveryStack › when DR is enabled for production environment" name="should create ACM certificate for DR domain" time="0">
      <skipped/>
    </testcase>
    <testcase classname="DisasterRecoveryStack › when DR is enabled for production environment" name="should create CloudWatch dashboard for DR monitoring" time="0">
      <skipped/>
    </testcase>
    <testcase classname="DisasterRecoveryStack › when DR is enabled for production environment" name="should create Systems Manager parameters for DR configuration" time="0">
      <skipped/>
    </testcase>
    <testcase classname="DisasterRecoveryStack › when DR is enabled for production environment" name="should create SNS topic for cross-region replication notifications" time="0">
      <skipped/>
    </testcase>
    <testcase classname="DisasterRecoveryStack › when DR is enabled for production environment" name="should have proper DR tags applied" time="0">
      <skipped/>
    </testcase>
    <testcase classname="DisasterRecoveryStack › when DR is enabled for production environment" name="should create outputs for DR stack references" time="0">
      <skipped/>
    </testcase>
    <testcase classname="DisasterRecoveryStack › when DR is enabled for production environment" name="should configure region-specific resource sizing" time="0">
      <skipped/>
    </testcase>
    <testcase classname="DisasterRecoveryStack › when DR is disabled" name="should not create any DR resources when disabled" time="0">
      <skipped/>
    </testcase>
    <testcase classname="DisasterRecoveryStack › when environment is not production" name="should not create DR resources for non-production environment" time="0">
      <skipped/>
    </testcase>
  </testsuite>
  <testsuite name="Network Stack" errors="0" failures="0" skipped="11" timestamp="2025-09-19T04:24:15" time="1.701" tests="11">
    <testcase classname="Network Stack" name="VPC is created with correct configuration" time="0">
      <skipped/>
    </testcase>
    <testcase classname="Network Stack" name="Public subnets are created" time="0">
      <skipped/>
    </testcase>
    <testcase classname="Network Stack" name="Private subnets are created" time="0">
      <skipped/>
    </testcase>
    <testcase classname="Network Stack" name="Internet Gateway is created" time="0">
      <skipped/>
    </testcase>
    <testcase classname="Network Stack" name="NAT Gateway is created for development environment" time="0">
      <skipped/>
    </testcase>
    <testcase classname="Network Stack" name="Network stack outputs are created" time="0">
      <skipped/>
    </testcase>
    <testcase classname="Network Stack" name="Common tags are applied to VPC" time="0">
      <skipped/>
    </testcase>
    <testcase classname="Network Stack" name="Security groups are created for all services" time="0">
      <skipped/>
    </testcase>
    <testcase classname="Network Stack" name="Security group rules are properly configured" time="0">
      <skipped/>
    </testcase>
    <testcase classname="Network Stack" name="VPC Flow Logs are configured when enabled" time="0">
      <skipped/>
    </testcase>
    <testcase classname="Network Stack" name="Subnet tagging for EKS is configured correctly" time="0">
      <skipped/>
    </testcase>
  </testsuite>
  <testsuite name="SecurityStack" errors="0" failures="0" skipped="11" timestamp="2025-09-19T04:24:15" time="1.486" tests="11">
    <testcase classname="SecurityStack" name="should create KMS key with proper configuration" time="0">
      <skipped/>
    </testcase>
    <testcase classname="SecurityStack" name="should create CloudTrail with proper configuration" time="0">
      <skipped/>
    </testcase>
    <testcase classname="SecurityStack" name="should create S3 bucket for CloudTrail logs" time="0">
      <skipped/>
    </testcase>
    <testcase classname="SecurityStack" name="should create application IAM role with least privilege" time="0">
      <skipped/>
    </testcase>
    <testcase classname="SecurityStack" name="should create observability IAM role" time="0">
      <skipped/>
    </testcase>
    <testcase classname="SecurityStack" name="should create secrets for secure configuration" time="0">
      <skipped/>
    </testcase>
    <testcase classname="SecurityStack" name="should create CloudWatch Log Group for CloudTrail" time="0">
      <skipped/>
    </testcase>
    <testcase classname="SecurityStack" name="should output important ARNs" time="0">
      <skipped/>
    </testcase>
    <testcase classname="SecurityStack" name="should have proper resource tagging" time="0">
      <skipped/>
    </testcase>
    <testcase classname="SecurityStack" name="should configure KMS key policy for CloudWatch Logs" time="0">
      <skipped/>
    </testcase>
    <testcase classname="SecurityStack" name="should configure S3 lifecycle policies for cost optimization" time="0">
      <skipped/>
    </testcase>
  </testsuite>
  <testsuite name="GenAI Demo Multi-Stack Infrastructure Orchestration" errors="0" failures="0" skipped="10" timestamp="2025-09-19T04:24:15" time="1.53" tests="10">
    <testcase classname="GenAI Demo Multi-Stack Infrastructure Orchestration" name="Multi-stack architecture creates separate stacks" time="0">
      <skipped/>
    </testcase>
    <testcase classname="GenAI Demo Multi-Stack Infrastructure Orchestration" name="Main stack outputs provide infrastructure summary" time="0">
      <skipped/>
    </testcase>
    <testcase classname="GenAI Demo Multi-Stack Infrastructure Orchestration" name="Stack dependencies are properly configured" time="0">
      <skipped/>
    </testcase>
    <testcase classname="GenAI Demo Multi-Stack Infrastructure Orchestration" name="Cross-stack references work correctly" time="0">
      <skipped/>
    </testcase>
    <testcase classname="GenAI Demo Multi-Stack Infrastructure Orchestration" name="Naming conventions are consistent across stacks" time="0">
      <skipped/>
    </testcase>
    <testcase classname="GenAI Demo Multi-Stack Infrastructure Orchestration" name="Stack-level tagging is applied correctly" time="0">
      <skipped/>
    </testcase>
    <testcase classname="GenAI Demo Multi-Stack Infrastructure with Domain" name="Multi-stack architecture with domain creates all separate stacks" time="0">
      <skipped/>
    </testcase>
    <testcase classname="GenAI Demo Multi-Stack Infrastructure with Domain" name="Cross-stack references include certificate information" time="0">
      <skipped/>
    </testcase>
    <testcase classname="GenAI Demo Multi-Stack Infrastructure with Domain" name="Domain-specific stack integration works correctly" time="0">
      <skipped/>
    </testcase>
    <testcase classname="GenAI Demo Multi-Stack Infrastructure with Domain" name="Stack dependencies work with domain configuration" time="0">
      <skipped/>
    </testcase>
  </testsuite>
  <testsuite name="Certificate Stack" errors="0" failures="0" skipped="8" timestamp="2025-09-19T04:24:16" time="1.499" tests="8">
    <testcase classname="Certificate Stack › Without Domain" name="No certificates are created when domain is not provided" time="0">
      <skipped/>
    </testcase>
    <testcase classname="Certificate Stack › Without Domain" name="No outputs are created when domain is not provided" time="0">
      <skipped/>
    </testcase>
    <testcase classname="Certificate Stack › With Domain" name="ACM certificates are created with DNS validation" time="0">
      <skipped/>
    </testcase>
    <testcase classname="Certificate Stack › With Domain" name="Certificate validation monitoring is configured" time="0">
      <skipped/>
    </testcase>
    <testcase classname="Certificate Stack › With Domain" name="Certificate ARNs are exported for Kubernetes Ingress use" time="0">
      <skipped/>
    </testcase>
    <testcase classname="Certificate Stack › With Domain" name="Hosted Zone ID is exported for cross-stack references" time="0">
      <skipped/>
    </testcase>
    <testcase classname="Certificate Stack › With Domain" name="Certificate validation status monitoring outputs are created" time="0">
      <skipped/>
    </testcase>
    <testcase classname="Certificate Stack › With Domain" name="Common tags are applied to certificate resources" time="0">
      <skipped/>
    </testcase>
  </testsuite>
  <testsuite name="MultiRegionStack" errors="0" failures="0" skipped="7" timestamp="2025-09-19T04:24:16" time="1.331" tests="7">
    <testcase classname="MultiRegionStack › when multi-region is enabled for production" name="should create Route 53 health check for primary region" time="0">
      <skipped/>
    </testcase>
    <testcase classname="MultiRegionStack › when multi-region is enabled for production" name="should create CloudWatch alarms for health check monitoring" time="0">
      <skipped/>
    </testcase>
    <testcase classname="MultiRegionStack › when multi-region is enabled for production" name="should create SNS topic for multi-region alerts" time="0">
      <skipped/>
    </testcase>
    <testcase classname="MultiRegionStack › when multi-region is enabled for production" name="should have proper tags applied" time="0">
      <skipped/>
    </testcase>
    <testcase classname="MultiRegionStack › when multi-region is enabled for production" name="should create outputs for cross-stack references" time="0">
      <skipped/>
    </testcase>
    <testcase classname="MultiRegionStack › when multi-region is disabled" name="should not create any multi-region resources" time="0">
      <skipped/>
    </testcase>
    <testcase classname="MultiRegionStack › when environment is not production" name="should not create any multi-region resources for non-production environment" time="0">
      <skipped/>
    </testcase>
  </testsuite>
  <testsuite name="MSK Observability Topics Configuration" errors="0" failures="0" skipped="6" timestamp="2025-09-19T04:24:17" time="1.475" tests="6">
    <testcase classname="MSK Observability Topics Configuration" name="should include observability topics in domain events topics output" time="0">
      <skipped/>
    </testcase>
    <testcase classname="MSK Observability Topics Configuration" name="should include observability DLQ topics output" time="0">
      <skipped/>
    </testcase>
    <testcase classname="MSK Observability Topics Configuration" name="should include observability topics configuration output" time="0">
      <skipped/>
    </testcase>
    <testcase classname="MSK Observability Topics Configuration" name="should include Spring Boot observability configuration output" time="0">
      <skipped/>
    </testcase>
    <testcase classname="MSK Observability Topics Configuration" name="should create MSK cluster with proper configuration" time="0">
      <skipped/>
    </testcase>
    <testcase classname="MSK Observability Topics Configuration" name="should create MSK configuration with proper settings" time="0">
      <skipped/>
    </testcase>
  </testsuite>
  <testsuite name="EKS Cluster Infrastructure" errors="0" failures="0" skipped="8" timestamp="2025-09-19T04:24:17" time="1.173" tests="8">
    <testcase classname="EKS Cluster Infrastructure › EKS Cluster Configuration" name="should create EKS cluster with correct configuration" time="0">
      <skipped/>
    </testcase>
    <testcase classname="EKS Cluster Infrastructure › EKS Cluster Configuration" name="should create EKS cluster with proper tags" time="0">
      <skipped/>
    </testcase>
    <testcase classname="EKS Cluster Infrastructure › EKS Node Group Configuration" name="should create managed node group with correct configuration" time="0">
      <skipped/>
    </testcase>
    <testcase classname="EKS Cluster Infrastructure › EKS Node Group Configuration" name="should configure node group with proper labels" time="0">
      <skipped/>
    </testcase>
    <testcase classname="EKS Cluster Infrastructure › EKS Add-ons and Helm Charts" name="should install AWS Load Balancer Controller" time="0">
      <skipped/>
    </testcase>
    <testcase classname="EKS Cluster Infrastructure › EKS Add-ons and Helm Charts" name="should install Cluster Autoscaler" time="0">
      <skipped/>
    </testcase>
    <testcase classname="EKS Cluster Infrastructure › EKS Add-ons and Helm Charts" name="should install Metrics Server" time="0">
      <skipped/>
    </testcase>
    <testcase classname="EKS Cluster Infrastructure › EKS Outputs" name="should export EKS cluster information" time="0">
      <skipped/>
    </testcase>
  </testsuite>
</testsuites>