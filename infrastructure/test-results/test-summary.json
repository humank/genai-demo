{
  "timestamp": "2025-09-19T04:24:18.930Z",
  "testResults": {
    "total": 316,
    "passed": 0,
    "failed": 1,
    "pending": 315,
    "todo": 0
  },
  "coverage": null,
  "testSuites": [
    {
      "name": "/test/rds-stack.test.ts",
      "status": "passed",
      "duration": 14703,
      "tests": [
        {
          "title": "RDS Stack should create RDS PostgreSQL instance with correct configuration",
          "status": "pending",
          "duration": null
        },
        {
          "title": "RDS Stack should create production RDS instance with Multi-AZ and enhanced configuration",
          "status": "pending",
          "duration": null
        },
        {
          "title": "RDS Stack should create KMS key for database encryption",
          "status": "pending",
          "duration": null
        },
        {
          "title": "RDS Stack should create database credentials secret",
          "status": "pending",
          "duration": null
        },
        {
          "title": "RDS Stack should create parameter group with optimized PostgreSQL settings",
          "status": "pending",
          "duration": null
        },
        {
          "title": "RDS Stack should create production parameter group with enhanced settings",
          "status": "pending",
          "duration": null
        },
        {
          "title": "RDS Stack should create database subnet group in isolated subnets",
          "status": "pending",
          "duration": null
        },
        {
          "title": "RDS Stack should create CloudWatch alarms for database monitoring",
          "status": "pending",
          "duration": null
        },
        {
          "title": "RDS Stack should create SNS topic for database alerts",
          "status": "pending",
          "duration": null
        },
        {
          "title": "RDS Stack should create Parameter Store parameters for database connection",
          "status": "pending",
          "duration": null
        },
        {
          "title": "RDS Stack should create CloudWatch log groups for database logs",
          "status": "pending",
          "duration": null
        },
        {
          "title": "RDS Stack should create proper stack outputs",
          "status": "pending",
          "duration": null
        },
        {
          "title": "RDS Stack should apply proper tags to all resources",
          "status": "pending",
          "duration": null
        },
        {
          "title": "RDS Stack should have different removal policies for production vs non-production",
          "status": "pending",
          "duration": null
        }
      ]
    },
    {
      "name": "/test/observability-stack.test.ts",
      "status": "passed",
      "duration": 14743,
      "tests": [
        {
          "title": "ObservabilityStack SNS Topics should create three SNS topics for different alert levels",
          "status": "pending",
          "duration": null
        },
        {
          "title": "ObservabilityStack SNS Topics should encrypt SNS topics with KMS",
          "status": "pending",
          "duration": null
        },
        {
          "title": "ObservabilityStack S3 Buckets should create log archive bucket with proper configuration",
          "status": "pending",
          "duration": null
        },
        {
          "title": "ObservabilityStack S3 Buckets should create data lake bucket with proper configuration",
          "status": "pending",
          "duration": null
        },
        {
          "title": "ObservabilityStack S3 Buckets should configure lifecycle rules for cost optimization",
          "status": "pending",
          "duration": null
        },
        {
          "title": "ObservabilityStack CloudWatch Log Groups should create application log groups",
          "status": "pending",
          "duration": null
        },
        {
          "title": "ObservabilityStack CloudWatch Log Groups should create infrastructure log groups",
          "status": "pending",
          "duration": null
        },
        {
          "title": "ObservabilityStack CloudWatch Log Groups should create observability log groups",
          "status": "pending",
          "duration": null
        },
        {
          "title": "ObservabilityStack CloudWatch Log Groups should encrypt log groups with KMS",
          "status": "pending",
          "duration": null
        },
        {
          "title": "ObservabilityStack KMS Key should create KMS key for observability encryption",
          "status": "pending",
          "duration": null
        },
        {
          "title": "ObservabilityStack KMS Key should create KMS alias for observability key",
          "status": "pending",
          "duration": null
        },
        {
          "title": "ObservabilityStack KMS Key should have proper key policy for observability services",
          "status": "pending",
          "duration": null
        },
        {
          "title": "ObservabilityStack IAM Role should create observability IAM role",
          "status": "pending",
          "duration": null
        },
        {
          "title": "ObservabilityStack IAM Role should have proper managed policies attached",
          "status": "pending",
          "duration": null
        },
        {
          "title": "ObservabilityStack IAM Role should have inline policy for observability permissions",
          "status": "pending",
          "duration": null
        },
        {
          "title": "ObservabilityStack X-Ray Configuration should store X-Ray tracing configuration in Parameter Store",
          "status": "pending",
          "duration": null
        },
        {
          "title": "ObservabilityStack X-Ray Configuration should enable X-Ray tracing",
          "status": "pending",
          "duration": null
        },
        {
          "title": "ObservabilityStack EventBridge Rules should create infrastructure health event rule",
          "status": "pending",
          "duration": null
        },
        {
          "title": "ObservabilityStack EventBridge Rules should create security events rule",
          "status": "pending",
          "duration": null
        },
        {
          "title": "ObservabilityStack EventBridge Rules should create CloudWatch alarm state changes rule",
          "status": "pending",
          "duration": null
        },
        {
          "title": "ObservabilityStack EventBridge Rules should have SNS targets for event rules",
          "status": "pending",
          "duration": null
        },
        {
          "title": "ObservabilityStack CloudWatch Alarms should create high CPU utilization alarm",
          "status": "pending",
          "duration": null
        },
        {
          "title": "ObservabilityStack CloudWatch Alarms should create high memory utilization alarm",
          "status": "pending",
          "duration": null
        },
        {
          "title": "ObservabilityStack CloudWatch Alarms should create low disk space alarm",
          "status": "pending",
          "duration": null
        },
        {
          "title": "ObservabilityStack CloudWatch Alarms should create high error rate alarm",
          "status": "pending",
          "duration": null
        },
        {
          "title": "ObservabilityStack CloudWatch Alarms should create high response time alarm",
          "status": "pending",
          "duration": null
        },
        {
          "title": "ObservabilityStack CloudWatch Alarms should create database connection failures alarm",
          "status": "pending",
          "duration": null
        },
        {
          "title": "ObservabilityStack CloudWatch Alarms should have SNS actions for alarms",
          "status": "pending",
          "duration": null
        },
        {
          "title": "ObservabilityStack Parameter Store Configuration should store log groups configuration",
          "status": "pending",
          "duration": null
        },
        {
          "title": "ObservabilityStack Parameter Store Configuration should store SNS topics configuration",
          "status": "pending",
          "duration": null
        },
        {
          "title": "ObservabilityStack Parameter Store Configuration should store S3 buckets configuration",
          "status": "pending",
          "duration": null
        },
        {
          "title": "ObservabilityStack Parameter Store Configuration should store X-Ray configuration",
          "status": "pending",
          "duration": null
        },
        {
          "title": "ObservabilityStack Stack Outputs should create outputs for SNS topic ARNs",
          "status": "pending",
          "duration": null
        },
        {
          "title": "ObservabilityStack Stack Outputs should create outputs for S3 bucket names",
          "status": "pending",
          "duration": null
        },
        {
          "title": "ObservabilityStack Stack Outputs should create output for observability role ARN",
          "status": "pending",
          "duration": null
        },
        {
          "title": "ObservabilityStack Stack Outputs should create observability stack summary output",
          "status": "pending",
          "duration": null
        },
        {
          "title": "ObservabilityStack Resource Tagging should tag all resources with common tags",
          "status": "pending",
          "duration": null
        },
        {
          "title": "ObservabilityStack Resource Tagging should tag resources with specific purpose tags",
          "status": "pending",
          "duration": null
        },
        {
          "title": "ObservabilityStack Cross-Region Replication should configure cross-region replication when enabled",
          "status": "pending",
          "duration": null
        },
        {
          "title": "ObservabilityStack Environment-Specific Configuration should use production retention policies for production environment",
          "status": "pending",
          "duration": null
        },
        {
          "title": "ObservabilityStack Environment-Specific Configuration should use development retention policies for development environment",
          "status": "pending",
          "duration": null
        }
      ]
    },
    {
      "name": "/test/disaster-recovery-automation.test.ts",
      "status": "passed",
      "duration": 14846,
      "tests": [
        {
          "title": "DisasterRecoveryAutomation Basic Construction should create DR automation construct with minimal configuration",
          "status": "pending",
          "duration": null
        },
        {
          "title": "DisasterRecoveryAutomation Basic Construction should create DR automation construct with full configuration",
          "status": "pending",
          "duration": null
        },
        {
          "title": "DisasterRecoveryAutomation Lambda Functions should create failover Lambda with correct configuration",
          "status": "pending",
          "duration": null
        },
        {
          "title": "DisasterRecoveryAutomation Lambda Functions should create chaos testing Lambda with correct configuration",
          "status": "pending",
          "duration": null
        },
        {
          "title": "DisasterRecoveryAutomation Step Functions State Machines should create failover state machine",
          "status": "pending",
          "duration": null
        },
        {
          "title": "DisasterRecoveryAutomation Step Functions State Machines should create chaos testing state machine",
          "status": "pending",
          "duration": null
        },
        {
          "title": "DisasterRecoveryAutomation EventBridge Rules should create monthly testing rule",
          "status": "pending",
          "duration": null
        },
        {
          "title": "DisasterRecoveryAutomation CloudWatch Dashboard should create DR monitoring dashboard",
          "status": "pending",
          "duration": null
        },
        {
          "title": "DisasterRecoveryAutomation IAM Roles and Policies should create DR automation role with correct permissions",
          "status": "pending",
          "duration": null
        },
        {
          "title": "DisasterRecoveryAutomation Systems Manager Parameters should create DR automation configuration parameter",
          "status": "pending",
          "duration": null
        },
        {
          "title": "DisasterRecoveryAutomation Health Check Monitoring should create health check monitoring when health checks are provided",
          "status": "pending",
          "duration": null
        },
        {
          "title": "DisasterRecoveryAutomation Outputs should create all required outputs",
          "status": "pending",
          "duration": null
        },
        {
          "title": "DisasterRecoveryAutomation Integration Tests should integrate properly with existing infrastructure",
          "status": "pending",
          "duration": null
        }
      ]
    },
    {
      "name": "/test/integration/cross-stack-dependencies.integration.test.ts",
      "status": "passed",
      "duration": 15559,
      "tests": [
        {
          "title": "Cross-Stack Dependencies Integration Tests Multi-Stack Architecture Integration should create all stacks with proper dependencies",
          "status": "pending",
          "duration": null
        },
        {
          "title": "Cross-Stack Dependencies Integration Tests Multi-Stack Architecture Integration should share VPC resources across stacks",
          "status": "pending",
          "duration": null
        },
        {
          "title": "Cross-Stack Dependencies Integration Tests Multi-Stack Architecture Integration should share certificate resources across stacks",
          "status": "pending",
          "duration": null
        },
        {
          "title": "Cross-Stack Dependencies Integration Tests Multi-Stack Architecture Integration should create load balancer with proper certificate integration",
          "status": "pending",
          "duration": null
        },
        {
          "title": "Cross-Stack Dependencies Integration Tests Cross-Stack Resource References should properly reference VPC from other stacks",
          "status": "pending",
          "duration": null
        },
        {
          "title": "Cross-Stack Dependencies Integration Tests Cross-Stack Resource References should create proper CloudFormation exports and imports",
          "status": "pending",
          "duration": null
        },
        {
          "title": "Cross-Stack Dependencies Integration Tests Stack Naming and Tagging Consistency should use consistent naming across all stacks",
          "status": "pending",
          "duration": null
        },
        {
          "title": "Cross-Stack Dependencies Integration Tests Stack Naming and Tagging Consistency should apply consistent tags across all stacks",
          "status": "pending",
          "duration": null
        },
        {
          "title": "Cross-Stack Dependencies Integration Tests Environment-Specific Cross-Stack Integration should handle production environment with all stacks",
          "status": "pending",
          "duration": null
        },
        {
          "title": "Cross-Stack Dependencies Integration Tests Environment-Specific Cross-Stack Integration should handle development environment with cost optimizations",
          "status": "pending",
          "duration": null
        },
        {
          "title": "Cross-Stack Dependencies Integration Tests Stack Synthesis and Deployment Order should synthesize all stacks without errors",
          "status": "pending",
          "duration": null
        },
        {
          "title": "Cross-Stack Dependencies Integration Tests Stack Synthesis and Deployment Order should have correct deployment dependencies",
          "status": "pending",
          "duration": null
        },
        {
          "title": "Cross-Stack Dependencies Integration Tests Resource Sharing Validation should validate that shared resources are accessible",
          "status": "pending",
          "duration": null
        },
        {
          "title": "Cross-Stack Dependencies Integration Tests Resource Sharing Validation should validate cross-stack parameter passing",
          "status": "pending",
          "duration": null
        }
      ]
    },
    {
      "name": "/test/comprehensive-validation.test.ts",
      "status": "passed",
      "duration": 15588,
      "tests": [
        {
          "title": "Comprehensive Infrastructure Validation Infrastructure Synthesis and Performance should synthesize without errors",
          "status": "pending",
          "duration": null
        },
        {
          "title": "Comprehensive Infrastructure Validation Infrastructure Synthesis and Performance should meet performance benchmarks",
          "status": "pending",
          "duration": null
        },
        {
          "title": "Comprehensive Infrastructure Validation Infrastructure Synthesis and Performance should have reasonable template complexity",
          "status": "pending",
          "duration": null
        },
        {
          "title": "Comprehensive Infrastructure Validation Security and Compliance Validation should pass comprehensive security validation",
          "status": "pending",
          "duration": null
        },
        {
          "title": "Comprehensive Infrastructure Validation Security and Compliance Validation should have proper resource tagging",
          "status": "pending",
          "duration": null
        },
        {
          "title": "Comprehensive Infrastructure Validation Security and Compliance Validation should follow security group best practices",
          "status": "pending",
          "duration": null
        },
        {
          "title": "Comprehensive Infrastructure Validation Security and Compliance Validation should have proper encryption configuration",
          "status": "pending",
          "duration": null
        },
        {
          "title": "Comprehensive Infrastructure Validation Security and Compliance Validation should validate IAM policies for least privilege",
          "status": "pending",
          "duration": null
        },
        {
          "title": "Comprehensive Infrastructure Validation Resource Count and Configuration Validation should have expected VPC resources",
          "status": "pending",
          "duration": null
        },
        {
          "title": "Comprehensive Infrastructure Validation Resource Count and Configuration Validation should have proper security group configuration",
          "status": "pending",
          "duration": null
        },
        {
          "title": "Comprehensive Infrastructure Validation Resource Count and Configuration Validation should have observability resources when observability stack exists",
          "status": "pending",
          "duration": null
        },
        {
          "title": "Comprehensive Infrastructure Validation Resource Count and Configuration Validation should have KMS keys for encryption",
          "status": "pending",
          "duration": null
        },
        {
          "title": "Comprehensive Infrastructure Validation Cross-Stack Integration Validation should have proper stack dependencies",
          "status": "pending",
          "duration": null
        },
        {
          "title": "Comprehensive Infrastructure Validation Cross-Stack Integration Validation should have proper cross-stack exports",
          "status": "pending",
          "duration": null
        },
        {
          "title": "Comprehensive Infrastructure Validation Cross-Stack Integration Validation should have consistent naming across stacks",
          "status": "pending",
          "duration": null
        },
        {
          "title": "Comprehensive Infrastructure Validation Environment-Specific Configuration Validation should handle development environment correctly",
          "status": "pending",
          "duration": null
        },
        {
          "title": "Comprehensive Infrastructure Validation Environment-Specific Configuration Validation should handle production environment correctly",
          "status": "pending",
          "duration": null
        },
        {
          "title": "Comprehensive Infrastructure Validation Environment-Specific Configuration Validation should validate environment-specific retention policies",
          "status": "pending",
          "duration": null
        },
        {
          "title": "Comprehensive Infrastructure Validation Cost Optimization Validation should use cost-effective resource configurations for test environment",
          "status": "pending",
          "duration": null
        },
        {
          "title": "Comprehensive Infrastructure Validation Cost Optimization Validation should have proper S3 lifecycle configurations",
          "status": "pending",
          "duration": null
        },
        {
          "title": "Comprehensive Infrastructure Validation Cost Optimization Validation should have appropriate log retention policies",
          "status": "pending",
          "duration": null
        },
        {
          "title": "Comprehensive Infrastructure Validation Disaster Recovery and Reliability Validation should have multi-AZ configuration where appropriate",
          "status": "pending",
          "duration": null
        },
        {
          "title": "Comprehensive Infrastructure Validation Disaster Recovery and Reliability Validation should have proper backup and versioning configuration",
          "status": "pending",
          "duration": null
        },
        {
          "title": "Comprehensive Infrastructure Validation Disaster Recovery and Reliability Validation should have monitoring and alerting configured",
          "status": "pending",
          "duration": null
        },
        {
          "title": "Comprehensive Infrastructure Validation Template Comparison and Drift Detection should detect template changes between environments",
          "status": "pending",
          "duration": null
        },
        {
          "title": "Comprehensive Infrastructure Validation Template Comparison and Drift Detection should maintain template consistency for same environment",
          "status": "pending",
          "duration": null
        },
        {
          "title": "Comprehensive Infrastructure Validation Comprehensive Validation Report should generate comprehensive validation report",
          "status": "pending",
          "duration": null
        },
        {
          "title": "Comprehensive Infrastructure Validation Comprehensive Validation Report should validate all required infrastructure components",
          "status": "pending",
          "duration": null
        },
        {
          "title": "Comprehensive Infrastructure Validation Comprehensive Validation Report should validate infrastructure drift detection capabilities",
          "status": "pending",
          "duration": null
        },
        {
          "title": "Comprehensive Infrastructure Validation Comprehensive Validation Report should validate cost estimation integration",
          "status": "pending",
          "duration": null
        },
        {
          "title": "Comprehensive Infrastructure Validation Comprehensive Validation Report should validate budget alert configuration",
          "status": "pending",
          "duration": null
        },
        {
          "title": "Comprehensive Infrastructure Validation CI/CD Pipeline Integration Validation should validate CDK synthesis for CI/CD pipeline",
          "status": "pending",
          "duration": null
        },
        {
          "title": "Comprehensive Infrastructure Validation CI/CD Pipeline Integration Validation should validate automated security scanning integration",
          "status": "pending",
          "duration": null
        },
        {
          "title": "Comprehensive Infrastructure Validation CI/CD Pipeline Integration Validation should validate infrastructure documentation generation",
          "status": "pending",
          "duration": null
        }
      ]
    },
    {
      "name": "/test/analytics-stack.test.ts",
      "status": "passed",
      "duration": 1880,
      "tests": [
        {
          "title": "AnalyticsStack should create analytics stack with all required resources",
          "status": "pending",
          "duration": null
        },
        {
          "title": "AnalyticsStack should create proper IAM roles and policies",
          "status": "pending",
          "duration": null
        },
        {
          "title": "AnalyticsStack should create CloudWatch alarms for monitoring",
          "status": "pending",
          "duration": null
        },
        {
          "title": "AnalyticsStack should create proper outputs for cross-stack references",
          "status": "pending",
          "duration": null
        },
        {
          "title": "AnalyticsStack should apply proper tags to all resources",
          "status": "pending",
          "duration": null
        },
        {
          "title": "AnalyticsStack should configure lifecycle policies for cost optimization",
          "status": "pending",
          "duration": null
        }
      ]
    },
    {
      "name": "/test/msk-stack.test.ts",
      "status": "passed",
      "duration": 1860,
      "tests": [
        {
          "title": "MSKStack should create MSK cluster with correct configuration",
          "status": "pending",
          "duration": null
        },
        {
          "title": "MSKStack should create MSK configuration with domain events optimization",
          "status": "pending",
          "duration": null
        },
        {
          "title": "MSKStack should enable encryption at rest and in transit",
          "status": "pending",
          "duration": null
        },
        {
          "title": "MSKStack should enable IAM authentication",
          "status": "pending",
          "duration": null
        },
        {
          "title": "MSKStack should create MSK cluster policy for secure access",
          "status": "pending",
          "duration": null
        },
        {
          "title": "MSKStack should create MSK Connect role with appropriate permissions",
          "status": "pending",
          "duration": null
        },
        {
          "title": "MSKStack should enable comprehensive monitoring",
          "status": "pending",
          "duration": null
        },
        {
          "title": "MSKStack should create CloudWatch alarms for MSK monitoring",
          "status": "pending",
          "duration": null
        },
        {
          "title": "MSKStack should create appropriate outputs for integration",
          "status": "pending",
          "duration": null
        },
        {
          "title": "MSKStack should configure logging to CloudWatch",
          "status": "pending",
          "duration": null
        },
        {
          "title": "MSKStack should use private subnets for security",
          "status": "pending",
          "duration": null
        },
        {
          "title": "MSKStack should apply proper tags to all resources",
          "status": "pending",
          "duration": null
        }
      ]
    },
    {
      "name": "/test/snapshot/infrastructure-drift-detection.snapshot.test.ts",
      "status": "passed",
      "duration": 2024,
      "tests": [
        {
          "title": "Infrastructure Drift Detection Snapshots Complete Infrastructure Snapshots should match main infrastructure stack snapshot",
          "status": "pending",
          "duration": null
        },
        {
          "title": "Infrastructure Drift Detection Snapshots Complete Infrastructure Snapshots should match network stack snapshot",
          "status": "pending",
          "duration": null
        },
        {
          "title": "Infrastructure Drift Detection Snapshots Complete Infrastructure Snapshots should match certificate stack snapshot",
          "status": "pending",
          "duration": null
        },
        {
          "title": "Infrastructure Drift Detection Snapshots Complete Infrastructure Snapshots should match observability stack snapshot",
          "status": "pending",
          "duration": null
        },
        {
          "title": "Infrastructure Drift Detection Snapshots Environment-Specific Snapshots should match development environment snapshot",
          "status": "pending",
          "duration": null
        },
        {
          "title": "Infrastructure Drift Detection Snapshots Environment-Specific Snapshots should match production environment snapshot",
          "status": "pending",
          "duration": null
        },
        {
          "title": "Infrastructure Drift Detection Snapshots Environment-Specific Snapshots should match test environment snapshot",
          "status": "pending",
          "duration": null
        },
        {
          "title": "Infrastructure Drift Detection Snapshots Component-Specific Snapshots should match VPC configuration snapshot",
          "status": "pending",
          "duration": null
        },
        {
          "title": "Infrastructure Drift Detection Snapshots Component-Specific Snapshots should match security groups snapshot",
          "status": "pending",
          "duration": null
        },
        {
          "title": "Infrastructure Drift Detection Snapshots Component-Specific Snapshots should match observability components snapshot",
          "status": "pending",
          "duration": null
        },
        {
          "title": "Infrastructure Drift Detection Snapshots Cross-Stack Dependencies Snapshots should match cross-stack exports snapshot",
          "status": "pending",
          "duration": null
        },
        {
          "title": "Infrastructure Drift Detection Snapshots Cross-Stack Dependencies Snapshots should match stack dependencies snapshot",
          "status": "pending",
          "duration": null
        },
        {
          "title": "Infrastructure Drift Detection Snapshots Resource Tagging Snapshots should match resource tagging patterns snapshot",
          "status": "pending",
          "duration": null
        },
        {
          "title": "Infrastructure Drift Detection Snapshots Configuration Drift Detection should detect changes in CDK context configuration",
          "status": "pending",
          "duration": null
        },
        {
          "title": "Infrastructure Drift Detection Snapshots Configuration Drift Detection should detect changes in stack properties",
          "status": "pending",
          "duration": null
        },
        {
          "title": "Infrastructure Drift Detection Snapshots Configuration Drift Detection should detect changes in environment-specific configurations",
          "status": "pending",
          "duration": null
        },
        {
          "title": "Infrastructure Drift Detection Snapshots Metadata and Annotations Snapshots should match CDK metadata snapshot",
          "status": "pending",
          "duration": null
        },
        {
          "title": "Infrastructure Drift Detection Snapshots Metadata and Annotations Snapshots should match stack annotations snapshot",
          "status": "pending",
          "duration": null
        }
      ]
    },
    {
      "name": "/test/enhanced-configuration-management.test.ts",
      "status": "passed",
      "duration": 1597,
      "tests": [
        {
          "title": "Enhanced Configuration Management should create VPC with environment-specific configuration",
          "status": "pending",
          "duration": null
        },
        {
          "title": "Enhanced Configuration Management should create security groups with standardized naming",
          "status": "pending",
          "duration": null
        },
        {
          "title": "Enhanced Configuration Management should create VPC Flow Logs with proper retention",
          "status": "pending",
          "duration": null
        },
        {
          "title": "Enhanced Configuration Management should create Parameter Store parameters",
          "status": "pending",
          "duration": null
        },
        {
          "title": "Enhanced Configuration Management should apply standardized tags to all resources",
          "status": "pending",
          "duration": null
        },
        {
          "title": "Enhanced Configuration Management should create cost monitoring alarms",
          "status": "pending",
          "duration": null
        },
        {
          "title": "Enhanced Configuration Management should create proper outputs with standardized naming",
          "status": "pending",
          "duration": null
        },
        {
          "title": "Enhanced Configuration Management should handle production environment configuration differently",
          "status": "pending",
          "duration": null
        }
      ]
    },
    {
      "name": "/test/unit/network-stack.unit.test.ts",
      "status": "passed",
      "duration": 1656,
      "tests": [
        {
          "title": "NetworkStack Unit Tests VPC Configuration should create VPC with correct CIDR and configuration",
          "status": "pending",
          "duration": null
        },
        {
          "title": "NetworkStack Unit Tests VPC Configuration should enable VPC Flow Logs when configured",
          "status": "pending",
          "duration": null
        },
        {
          "title": "NetworkStack Unit Tests VPC Configuration should create correct number of subnets across AZs",
          "status": "pending",
          "duration": null
        },
        {
          "title": "NetworkStack Unit Tests Security Groups should create EKS security group with proper rules",
          "status": "pending",
          "duration": null
        },
        {
          "title": "NetworkStack Unit Tests Security Groups should create RDS security group with database port access",
          "status": "pending",
          "duration": null
        },
        {
          "title": "NetworkStack Unit Tests Security Groups should create MSK security group with Kafka ports",
          "status": "pending",
          "duration": null
        },
        {
          "title": "NetworkStack Unit Tests Security Groups should create ALB security group with HTTP/HTTPS access",
          "status": "pending",
          "duration": null
        },
        {
          "title": "NetworkStack Unit Tests NAT Gateways should create correct number of NAT gateways based on environment",
          "status": "pending",
          "duration": null
        },
        {
          "title": "NetworkStack Unit Tests NAT Gateways should create Elastic IPs for NAT gateways",
          "status": "pending",
          "duration": null
        },
        {
          "title": "NetworkStack Unit Tests Internet Gateway should create and attach Internet Gateway",
          "status": "pending",
          "duration": null
        },
        {
          "title": "NetworkStack Unit Tests Route Tables should create public route tables with internet gateway routes",
          "status": "pending",
          "duration": null
        },
        {
          "title": "NetworkStack Unit Tests Route Tables should create private route tables with NAT gateway routes",
          "status": "pending",
          "duration": null
        },
        {
          "title": "NetworkStack Unit Tests Resource Tagging should tag all resources with standard tags",
          "status": "pending",
          "duration": null
        },
        {
          "title": "NetworkStack Unit Tests Resource Tagging should tag security groups with component-specific tags",
          "status": "pending",
          "duration": null
        },
        {
          "title": "NetworkStack Unit Tests Stack Outputs should export VPC ID and CIDR",
          "status": "pending",
          "duration": null
        },
        {
          "title": "NetworkStack Unit Tests Stack Outputs should export security group IDs",
          "status": "pending",
          "duration": null
        },
        {
          "title": "NetworkStack Unit Tests Stack Outputs should export subnet IDs",
          "status": "pending",
          "duration": null
        },
        {
          "title": "NetworkStack Unit Tests Environment-Specific Configuration should use production configuration for production environment",
          "status": "pending",
          "duration": null
        },
        {
          "title": "NetworkStack Unit Tests Environment-Specific Configuration should use development configuration for development environment",
          "status": "pending",
          "duration": null
        },
        {
          "title": "NetworkStack Unit Tests Network ACLs should create network ACLs for additional security",
          "status": "pending",
          "duration": null
        },
        {
          "title": "NetworkStack Unit Tests Network ACLs should have proper network ACL rules",
          "status": "pending",
          "duration": null
        },
        {
          "title": "NetworkStack Unit Tests VPC Endpoints should create VPC endpoints for AWS services",
          "status": "pending",
          "duration": null
        }
      ]
    },
    {
      "name": "/test/cost-optimization-stack.test.ts",
      "status": "passed",
      "duration": 1504,
      "tests": [
        {
          "title": "CostOptimizationStack SNS Topics should create billing alarm topic",
          "status": "pending",
          "duration": null
        },
        {
          "title": "CostOptimizationStack SNS Topics should create cost optimization topic",
          "status": "pending",
          "duration": null
        },
        {
          "title": "CostOptimizationStack SNS Topics should create email subscriptions",
          "status": "pending",
          "duration": null
        },
        {
          "title": "CostOptimizationStack CloudWatch Alarms should create billing alarms for different cost thresholds",
          "status": "pending",
          "duration": null
        },
        {
          "title": "CostOptimizationStack CloudWatch Alarms should create service-specific cost alarms",
          "status": "pending",
          "duration": null
        },
        {
          "title": "CostOptimizationStack CloudWatch Alarms should configure alarm actions to SNS topics",
          "status": "pending",
          "duration": null
        },
        {
          "title": "CostOptimizationStack AWS Budgets should create monthly budget",
          "status": "pending",
          "duration": null
        },
        {
          "title": "CostOptimizationStack AWS Budgets should configure budget notifications",
          "status": "pending",
          "duration": null
        },
        {
          "title": "CostOptimizationStack CloudWatch Dashboard should create cost optimization dashboard",
          "status": "pending",
          "duration": null
        },
        {
          "title": "CostOptimizationStack CloudWatch Dashboard should include billing metrics in dashboard",
          "status": "pending",
          "duration": null
        },
        {
          "title": "CostOptimizationStack Stack Outputs should output billing alarm topic ARN",
          "status": "pending",
          "duration": null
        },
        {
          "title": "CostOptimizationStack Stack Outputs should output cost optimization topic ARN",
          "status": "pending",
          "duration": null
        },
        {
          "title": "CostOptimizationStack Production Environment should have higher cost thresholds for production",
          "status": "pending",
          "duration": null
        },
        {
          "title": "CostOptimizationStack Production Environment should create daily budget for production",
          "status": "pending",
          "duration": null
        },
        {
          "title": "CostOptimizationStack Resource Tagging should apply cost allocation tags",
          "status": "pending",
          "duration": null
        },
        {
          "title": "CostOptimizationStack Error Handling should handle missing optional parameters gracefully",
          "status": "pending",
          "duration": null
        }
      ]
    },
    {
      "name": "/test/integration/rds-integration.test.ts",
      "status": "passed",
      "duration": 1676,
      "tests": [
        {
          "title": "RDS Integration Tests should integrate RDS stack with main infrastructure stack",
          "status": "pending",
          "duration": null
        },
        {
          "title": "RDS Integration Tests should create RDS database with correct VPC integration",
          "status": "pending",
          "duration": null
        },
        {
          "title": "RDS Integration Tests should create proper security group integration",
          "status": "pending",
          "duration": null
        },
        {
          "title": "RDS Integration Tests should create monitoring and alerting for RDS",
          "status": "pending",
          "duration": null
        },
        {
          "title": "RDS Integration Tests should create Parameter Store integration",
          "status": "pending",
          "duration": null
        },
        {
          "title": "RDS Integration Tests should create proper stack outputs for cross-stack references",
          "status": "pending",
          "duration": null
        },
        {
          "title": "RDS Integration Tests should handle production environment with enhanced configuration",
          "status": "pending",
          "duration": null
        }
      ]
    },
    {
      "name": "/test/core-infrastructure-stack.test.ts",
      "status": "passed",
      "duration": 1686,
      "tests": [
        {
          "title": "Core Infrastructure Stack Without Domain Application Load Balancer is created",
          "status": "pending",
          "duration": null
        },
        {
          "title": "Core Infrastructure Stack Without Domain Default target group is created with health checks",
          "status": "pending",
          "duration": null
        },
        {
          "title": "Core Infrastructure Stack Without Domain HTTP listener is created without domain",
          "status": "pending",
          "duration": null
        },
        {
          "title": "Core Infrastructure Stack Without Domain Load balancer outputs are created",
          "status": "pending",
          "duration": null
        },
        {
          "title": "Core Infrastructure Stack Without Domain Environment and project outputs are created",
          "status": "pending",
          "duration": null
        },
        {
          "title": "Core Infrastructure Stack With Domain and Certificates HTTPS listener is created with certificates",
          "status": "pending",
          "duration": null
        },
        {
          "title": "Core Infrastructure Stack With Domain and Certificates HTTP listener redirects to HTTPS",
          "status": "pending",
          "duration": null
        },
        {
          "title": "Core Infrastructure Stack With Domain and Certificates DNS A records are created pointing to ALB",
          "status": "pending",
          "duration": null
        },
        {
          "title": "Core Infrastructure Stack With Domain and Certificates DNS A record target output is created",
          "status": "pending",
          "duration": null
        },
        {
          "title": "Core Infrastructure Stack With Domain and Certificates Kubernetes Ingress annotations are provided",
          "status": "pending",
          "duration": null
        },
        {
          "title": "Core Infrastructure Stack With Domain and Certificates Common tags are applied to load balancer",
          "status": "pending",
          "duration": null
        }
      ]
    },
    {
      "name": "/test/route53-failover-stack.test.ts",
      "status": "passed",
      "duration": 1701,
      "tests": [
        {
          "title": "Route53FailoverStack when both primary and secondary regions are configured should create health checks for both regions",
          "status": "pending",
          "duration": null
        },
        {
          "title": "Route53FailoverStack when both primary and secondary regions are configured should create failover DNS records",
          "status": "pending",
          "duration": null
        },
        {
          "title": "Route53FailoverStack when both primary and secondary regions are configured should create latency-based routing records",
          "status": "pending",
          "duration": null
        },
        {
          "title": "Route53FailoverStack when both primary and secondary regions are configured should create CloudWatch dashboard for failover monitoring",
          "status": "pending",
          "duration": null
        },
        {
          "title": "Route53FailoverStack when both primary and secondary regions are configured should create CloudWatch alarms for health check failures",
          "status": "pending",
          "duration": null
        },
        {
          "title": "Route53FailoverStack when both primary and secondary regions are configured should create SNS topic for failover alerts",
          "status": "pending",
          "duration": null
        },
        {
          "title": "Route53FailoverStack when both primary and secondary regions are configured should have proper tags applied to health checks",
          "status": "pending",
          "duration": null
        },
        {
          "title": "Route53FailoverStack when both primary and secondary regions are configured should create outputs for DNS names and configuration",
          "status": "pending",
          "duration": null
        },
        {
          "title": "Route53FailoverStack when both primary and secondary regions are configured should configure short TTL for faster failover",
          "status": "pending",
          "duration": null
        },
        {
          "title": "Route53FailoverStack when only primary region is configured should create only primary health check",
          "status": "pending",
          "duration": null
        },
        {
          "title": "Route53FailoverStack when only primary region is configured should create only primary failover record",
          "status": "pending",
          "duration": null
        },
        {
          "title": "Route53FailoverStack when only primary region is configured should create only one CloudWatch alarm",
          "status": "pending",
          "duration": null
        },
        {
          "title": "Route53FailoverStack when only primary region is configured should create outputs for primary region only",
          "status": "pending",
          "duration": null
        }
      ]
    },
    {
      "name": "/test/compliance/cdk-nag-compliance.test.ts",
      "status": "failed",
      "duration": 2512,
      "tests": [
        {
          "title": "CDK Compliance Tests Security Compliance Checks should have proper VPC security configurations",
          "status": "pending",
          "duration": null
        },
        {
          "title": "CDK Compliance Tests Security Compliance Checks should have secure security group configurations",
          "status": "pending",
          "duration": null
        },
        {
          "title": "CDK Compliance Tests Security Compliance Checks should have proper encryption configurations",
          "status": "pending",
          "duration": null
        },
        {
          "title": "CDK Compliance Tests Security Compliance Checks should have proper IAM configurations",
          "status": "pending",
          "duration": null
        },
        {
          "title": "CDK Compliance Tests Well-Architected Framework Compliance should validate operational excellence pillar",
          "status": "pending",
          "duration": null
        },
        {
          "title": "CDK Compliance Tests Well-Architected Framework Compliance should validate security pillar compliance",
          "status": "pending",
          "duration": null
        },
        {
          "title": "CDK Compliance Tests Well-Architected Framework Compliance should validate reliability pillar compliance",
          "status": "pending",
          "duration": null
        },
        {
          "title": "CDK Compliance Tests Well-Architected Framework Compliance should validate performance efficiency pillar",
          "status": "pending",
          "duration": null
        },
        {
          "title": "CDK Compliance Tests Well-Architected Framework Compliance should validate cost optimization pillar",
          "status": "pending",
          "duration": null
        },
        {
          "title": "CDK Compliance Tests Environment-Specific Compliance should validate production environment compliance",
          "status": "pending",
          "duration": null
        },
        {
          "title": "CDK Compliance Tests Environment-Specific Compliance should validate development environment compliance",
          "status": "pending",
          "duration": null
        },
        {
          "title": "CDK Compliance Tests Resource Tagging Compliance should have consistent resource tagging",
          "status": "failed",
          "duration": 829
        },
        {
          "title": "CDK Compliance Tests Resource Tagging Compliance should validate security group tagging",
          "status": "pending",
          "duration": null
        },
        {
          "title": "CDK Compliance Tests Network Security Compliance should validate security group rules",
          "status": "pending",
          "duration": null
        },
        {
          "title": "CDK Compliance Tests Network Security Compliance should validate database security",
          "status": "pending",
          "duration": null
        }
      ]
    },
    {
      "name": "/test/disaster-recovery-stack.test.ts",
      "status": "passed",
      "duration": 1669,
      "tests": [
        {
          "title": "DisasterRecoveryStack when DR is enabled for production environment should create VPC with DR-specific CIDR",
          "status": "pending",
          "duration": null
        },
        {
          "title": "DisasterRecoveryStack when DR is enabled for production environment should create Application Load Balancer for DR",
          "status": "pending",
          "duration": null
        },
        {
          "title": "DisasterRecoveryStack when DR is enabled for production environment should create ACM certificate for DR domain",
          "status": "pending",
          "duration": null
        },
        {
          "title": "DisasterRecoveryStack when DR is enabled for production environment should create CloudWatch dashboard for DR monitoring",
          "status": "pending",
          "duration": null
        },
        {
          "title": "DisasterRecoveryStack when DR is enabled for production environment should create Systems Manager parameters for DR configuration",
          "status": "pending",
          "duration": null
        },
        {
          "title": "DisasterRecoveryStack when DR is enabled for production environment should create SNS topic for cross-region replication notifications",
          "status": "pending",
          "duration": null
        },
        {
          "title": "DisasterRecoveryStack when DR is enabled for production environment should have proper DR tags applied",
          "status": "pending",
          "duration": null
        },
        {
          "title": "DisasterRecoveryStack when DR is enabled for production environment should create outputs for DR stack references",
          "status": "pending",
          "duration": null
        },
        {
          "title": "DisasterRecoveryStack when DR is enabled for production environment should configure region-specific resource sizing",
          "status": "pending",
          "duration": null
        },
        {
          "title": "DisasterRecoveryStack when DR is disabled should not create any DR resources when disabled",
          "status": "pending",
          "duration": null
        },
        {
          "title": "DisasterRecoveryStack when environment is not production should not create DR resources for non-production environment",
          "status": "pending",
          "duration": null
        }
      ]
    },
    {
      "name": "/test/network-stack.test.ts",
      "status": "passed",
      "duration": 1701,
      "tests": [
        {
          "title": "Network Stack VPC is created with correct configuration",
          "status": "pending",
          "duration": null
        },
        {
          "title": "Network Stack Public subnets are created",
          "status": "pending",
          "duration": null
        },
        {
          "title": "Network Stack Private subnets are created",
          "status": "pending",
          "duration": null
        },
        {
          "title": "Network Stack Internet Gateway is created",
          "status": "pending",
          "duration": null
        },
        {
          "title": "Network Stack NAT Gateway is created for development environment",
          "status": "pending",
          "duration": null
        },
        {
          "title": "Network Stack Network stack outputs are created",
          "status": "pending",
          "duration": null
        },
        {
          "title": "Network Stack Common tags are applied to VPC",
          "status": "pending",
          "duration": null
        },
        {
          "title": "Network Stack Security groups are created for all services",
          "status": "pending",
          "duration": null
        },
        {
          "title": "Network Stack Security group rules are properly configured",
          "status": "pending",
          "duration": null
        },
        {
          "title": "Network Stack VPC Flow Logs are configured when enabled",
          "status": "pending",
          "duration": null
        },
        {
          "title": "Network Stack Subnet tagging for EKS is configured correctly",
          "status": "pending",
          "duration": null
        }
      ]
    },
    {
      "name": "/test/security-stack.test.ts",
      "status": "passed",
      "duration": 1486,
      "tests": [
        {
          "title": "SecurityStack should create KMS key with proper configuration",
          "status": "pending",
          "duration": null
        },
        {
          "title": "SecurityStack should create CloudTrail with proper configuration",
          "status": "pending",
          "duration": null
        },
        {
          "title": "SecurityStack should create S3 bucket for CloudTrail logs",
          "status": "pending",
          "duration": null
        },
        {
          "title": "SecurityStack should create application IAM role with least privilege",
          "status": "pending",
          "duration": null
        },
        {
          "title": "SecurityStack should create observability IAM role",
          "status": "pending",
          "duration": null
        },
        {
          "title": "SecurityStack should create secrets for secure configuration",
          "status": "pending",
          "duration": null
        },
        {
          "title": "SecurityStack should create CloudWatch Log Group for CloudTrail",
          "status": "pending",
          "duration": null
        },
        {
          "title": "SecurityStack should output important ARNs",
          "status": "pending",
          "duration": null
        },
        {
          "title": "SecurityStack should have proper resource tagging",
          "status": "pending",
          "duration": null
        },
        {
          "title": "SecurityStack should configure KMS key policy for CloudWatch Logs",
          "status": "pending",
          "duration": null
        },
        {
          "title": "SecurityStack should configure S3 lifecycle policies for cost optimization",
          "status": "pending",
          "duration": null
        }
      ]
    },
    {
      "name": "/test/infrastructure.test.ts",
      "status": "passed",
      "duration": 1530,
      "tests": [
        {
          "title": "GenAI Demo Multi-Stack Infrastructure Orchestration Multi-stack architecture creates separate stacks",
          "status": "pending",
          "duration": null
        },
        {
          "title": "GenAI Demo Multi-Stack Infrastructure Orchestration Main stack outputs provide infrastructure summary",
          "status": "pending",
          "duration": null
        },
        {
          "title": "GenAI Demo Multi-Stack Infrastructure Orchestration Stack dependencies are properly configured",
          "status": "pending",
          "duration": null
        },
        {
          "title": "GenAI Demo Multi-Stack Infrastructure Orchestration Cross-stack references work correctly",
          "status": "pending",
          "duration": null
        },
        {
          "title": "GenAI Demo Multi-Stack Infrastructure Orchestration Naming conventions are consistent across stacks",
          "status": "pending",
          "duration": null
        },
        {
          "title": "GenAI Demo Multi-Stack Infrastructure Orchestration Stack-level tagging is applied correctly",
          "status": "pending",
          "duration": null
        },
        {
          "title": "GenAI Demo Multi-Stack Infrastructure with Domain Multi-stack architecture with domain creates all separate stacks",
          "status": "pending",
          "duration": null
        },
        {
          "title": "GenAI Demo Multi-Stack Infrastructure with Domain Cross-stack references include certificate information",
          "status": "pending",
          "duration": null
        },
        {
          "title": "GenAI Demo Multi-Stack Infrastructure with Domain Domain-specific stack integration works correctly",
          "status": "pending",
          "duration": null
        },
        {
          "title": "GenAI Demo Multi-Stack Infrastructure with Domain Stack dependencies work with domain configuration",
          "status": "pending",
          "duration": null
        }
      ]
    },
    {
      "name": "/test/certificate-stack.test.ts",
      "status": "passed",
      "duration": 1499,
      "tests": [
        {
          "title": "Certificate Stack Without Domain No certificates are created when domain is not provided",
          "status": "pending",
          "duration": null
        },
        {
          "title": "Certificate Stack Without Domain No outputs are created when domain is not provided",
          "status": "pending",
          "duration": null
        },
        {
          "title": "Certificate Stack With Domain ACM certificates are created with DNS validation",
          "status": "pending",
          "duration": null
        },
        {
          "title": "Certificate Stack With Domain Certificate validation monitoring is configured",
          "status": "pending",
          "duration": null
        },
        {
          "title": "Certificate Stack With Domain Certificate ARNs are exported for Kubernetes Ingress use",
          "status": "pending",
          "duration": null
        },
        {
          "title": "Certificate Stack With Domain Hosted Zone ID is exported for cross-stack references",
          "status": "pending",
          "duration": null
        },
        {
          "title": "Certificate Stack With Domain Certificate validation status monitoring outputs are created",
          "status": "pending",
          "duration": null
        },
        {
          "title": "Certificate Stack With Domain Common tags are applied to certificate resources",
          "status": "pending",
          "duration": null
        }
      ]
    },
    {
      "name": "/test/multi-region-stack.test.ts",
      "status": "passed",
      "duration": 1331,
      "tests": [
        {
          "title": "MultiRegionStack when multi-region is enabled for production should create Route 53 health check for primary region",
          "status": "pending",
          "duration": null
        },
        {
          "title": "MultiRegionStack when multi-region is enabled for production should create CloudWatch alarms for health check monitoring",
          "status": "pending",
          "duration": null
        },
        {
          "title": "MultiRegionStack when multi-region is enabled for production should create SNS topic for multi-region alerts",
          "status": "pending",
          "duration": null
        },
        {
          "title": "MultiRegionStack when multi-region is enabled for production should have proper tags applied",
          "status": "pending",
          "duration": null
        },
        {
          "title": "MultiRegionStack when multi-region is enabled for production should create outputs for cross-stack references",
          "status": "pending",
          "duration": null
        },
        {
          "title": "MultiRegionStack when multi-region is disabled should not create any multi-region resources",
          "status": "pending",
          "duration": null
        },
        {
          "title": "MultiRegionStack when environment is not production should not create any multi-region resources for non-production environment",
          "status": "pending",
          "duration": null
        }
      ]
    },
    {
      "name": "/test/msk-observability-topics.test.ts",
      "status": "passed",
      "duration": 1475,
      "tests": [
        {
          "title": "MSK Observability Topics Configuration should include observability topics in domain events topics output",
          "status": "pending",
          "duration": null
        },
        {
          "title": "MSK Observability Topics Configuration should include observability DLQ topics output",
          "status": "pending",
          "duration": null
        },
        {
          "title": "MSK Observability Topics Configuration should include observability topics configuration output",
          "status": "pending",
          "duration": null
        },
        {
          "title": "MSK Observability Topics Configuration should include Spring Boot observability configuration output",
          "status": "pending",
          "duration": null
        },
        {
          "title": "MSK Observability Topics Configuration should create MSK cluster with proper configuration",
          "status": "pending",
          "duration": null
        },
        {
          "title": "MSK Observability Topics Configuration should create MSK configuration with proper settings",
          "status": "pending",
          "duration": null
        }
      ]
    },
    {
      "name": "/test/eks-cluster.test.ts",
      "status": "passed",
      "duration": 1173,
      "tests": [
        {
          "title": "EKS Cluster Infrastructure EKS Cluster Configuration should create EKS cluster with correct configuration",
          "status": "pending",
          "duration": null
        },
        {
          "title": "EKS Cluster Infrastructure EKS Cluster Configuration should create EKS cluster with proper tags",
          "status": "pending",
          "duration": null
        },
        {
          "title": "EKS Cluster Infrastructure EKS Node Group Configuration should create managed node group with correct configuration",
          "status": "pending",
          "duration": null
        },
        {
          "title": "EKS Cluster Infrastructure EKS Node Group Configuration should configure node group with proper labels",
          "status": "pending",
          "duration": null
        },
        {
          "title": "EKS Cluster Infrastructure EKS Add-ons and Helm Charts should install AWS Load Balancer Controller",
          "status": "pending",
          "duration": null
        },
        {
          "title": "EKS Cluster Infrastructure EKS Add-ons and Helm Charts should install Cluster Autoscaler",
          "status": "pending",
          "duration": null
        },
        {
          "title": "EKS Cluster Infrastructure EKS Add-ons and Helm Charts should install Metrics Server",
          "status": "pending",
          "duration": null
        },
        {
          "title": "EKS Cluster Infrastructure EKS Outputs should export EKS cluster information",
          "status": "pending",
          "duration": null
        }
      ]
    }
  ],
  "performance": {
    "totalTime": 105399,
    "slowestTests": [
      {
        "name": "CDK Compliance Tests Resource Tagging Compliance should have consistent resource tagging",
        "duration": 829,
        "file": "/test/compliance/cdk-nag-compliance.test.ts"
      },
      {
        "name": "RDS Stack should create RDS PostgreSQL instance with correct configuration",
        "duration": 0,
        "file": "/test/rds-stack.test.ts"
      },
      {
        "name": "RDS Stack should create production RDS instance with Multi-AZ and enhanced configuration",
        "duration": 0,
        "file": "/test/rds-stack.test.ts"
      },
      {
        "name": "RDS Stack should create KMS key for database encryption",
        "duration": 0,
        "file": "/test/rds-stack.test.ts"
      },
      {
        "name": "RDS Stack should create database credentials secret",
        "duration": 0,
        "file": "/test/rds-stack.test.ts"
      },
      {
        "name": "RDS Stack should create parameter group with optimized PostgreSQL settings",
        "duration": 0,
        "file": "/test/rds-stack.test.ts"
      },
      {
        "name": "RDS Stack should create production parameter group with enhanced settings",
        "duration": 0,
        "file": "/test/rds-stack.test.ts"
      },
      {
        "name": "RDS Stack should create database subnet group in isolated subnets",
        "duration": 0,
        "file": "/test/rds-stack.test.ts"
      },
      {
        "name": "RDS Stack should create CloudWatch alarms for database monitoring",
        "duration": 0,
        "file": "/test/rds-stack.test.ts"
      },
      {
        "name": "RDS Stack should create SNS topic for database alerts",
        "duration": 0,
        "file": "/test/rds-stack.test.ts"
      }
    ]
  }
}